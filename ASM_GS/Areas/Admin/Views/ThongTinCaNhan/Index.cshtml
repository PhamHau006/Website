@model ASM_GS.Models.NhanVien

@{
    ViewData["Title"] = "Thông Tin Cá Nhân";
}
<!-- Add SweetAlert CSS and JavaScript files -->

<h2 style="text-align:center">@ViewData["Title"]</h2>


<form id="editForm" enctype="multipart/form-data">
    <div class="form-group">
        <label for="HinhAnh">Ảnh Đại Diện</label>
        <input type="file" id="HinhAnh" name="imageFile" class="form-control" />
        @if (!string.IsNullOrEmpty(Model.HinhAnh))
        {
            <img src="@Model.HinhAnh" alt="Current Avatar" width="120" height="120" class="mt-2" />
        }
    </div>


    <div class="form-group" style="display: none;">
        <label for="MaNhanVien">Mã Nhân Viên</label>
        <input type="text" id="MaNhanVien" name="MaNhanVien" class="form-control" value="@Model.MaNhanVien" hidden />
    </div>

    <!-- Tên Nhân Viên -->
    <div class="form-group">
        <label for="TenNhanVien">Tên Nhân Viên</label>
        <input type="text" id="TenNhanVien" name="TenNhanVien" class="form-control" value="@Model.TenNhanVien" />
        <span id="error-TenNhanVien" class="text-danger"></span>
    </div>

    <!-- Vai Trò -->
    <div class="form-group">
        <label for="VaiTro">Vai Trò</label>
        <input type="text" id="VaiTro" name="VaiTro" class="form-control" value="@Model.VaiTro" readonly />
    </div>

    <!-- Số Điện Thoại -->
    <div class="form-group">
        <label for="SoDienThoai">Số Điện Thoại</label>
        <input type="text" id="SoDienThoai" name="SoDienThoai" class="form-control" value="@Model.SoDienThoai" />
        <span id="error-SoDienThoai" class="text-danger"></span>
    </div>

    <!-- Ngày Bắt Đầu -->
    <div class="form-group">
        <label for="NgayBatDau">Ngày Bắt Đầu</label>
        <input type="date" id="NgayBatDau" name="NgayBatDau" class="form-control"
               value="@(Model.NgayBatDau.HasValue ? Model.NgayBatDau.Value.ToString("yyyy-MM-dd") : "")" readonly />
    </div>

    <!-- Ngày Sinh -->
    <div class="form-group">
        <label for="NgaySinh">Ngày Sinh</label>
        <input type="date" id="NgaySinh" name="NgaySinh" class="form-control" value="@(Model.NgaySinh?.ToString("yyyy-MM-dd") ?? "")" />
        <span asp-validation-for="NgaySinh" class="text-danger"></span>
    </div>

    <!-- Địa Chỉ -->
    <div class="form-group">
        <label for="DiaChi">Địa Chỉ</label>
        <input type="text" id="DiaChi" name="DiaChi" class="form-control" value="@Model.DiaChi" />
    </div>

    @* <!-- Trạng Thái -->
    <div class="form-group">
        <label for="TrangThai">Trạng Thái</label><br />
        <div>
            <label>
                <input type="radio" name="TrangThai" value="1" @(Model.TrangThai == 1 ? "checked" : "") /> Hoạt Động
            </label>
        </div>
        <div>
            <label>
                <input type="radio" name="TrangThai" value="0" @(Model.TrangThai == 0 ? "checked" : "") /> Không Hoạt Động
            </label>
        </div>
    </div> *@

    <!-- CCCD -->
    <div class="form-group">
        <label for="Cccd">CCCD</label>
        <input type="text" id="Cccd" name="Cccd" class="form-control" value="@Model.Cccd" />
        <span id="error-Cccd" class="text-danger"></span>
    </div>

    <!-- Giới Tính -->
    <div class="form-group">
        <label for="GioiTinh">Giới Tính</label><br />
        <div>
            <label>
                <input type="radio" name="GioiTinh" value="true" @(Model.GioiTinh == true ? "checked" : "") /> Nam
            </label>
        </div>
        <div>
            <label>
                <input type="radio" name="GioiTinh" value="false" @(Model.GioiTinh == false ? "checked" : "") /> Nữ
            </label>
        </div>
    </div>

    <!-- Nút cập nhật -->
    <button type="button" id="submitForm" class="btn btn-primary mt-3">Cập nhật</button>
</form>


<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>
    document.getElementById("submitForm").addEventListener("click", function() {
        let formData = new FormData(document.getElementById("editForm"));

        // Clear previous errors
        document.querySelectorAll(".text-danger").forEach(el => el.textContent = "");

        // Gửi AJAX
        $.ajax({
            url: '/Admin/ThongTinCaNhan/Edit', // URL tới action Edit
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function(response) {
                if (response.success) {
                    // Hiển thị SweetAlert nếu thành công
                    Swal.fire({
                        icon: 'success',
                        title: 'Thành Công',
                        text: response.message,
                        confirmButtonText: 'OK'
                    }).then(() => {
                        location.reload(); // Reload lại trang
                    });
                } else if (response.errors) {
                    // Hiển thị lỗi dưới các trường input
                    for (const [key, message] of Object.entries(response.errors)) {
                        document.getElementById(`error-${key}`).textContent = message;
                    }
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: response.message || 'Đã xảy ra lỗi không xác định.',
                        confirmButtonText: 'OK'
                    });
                }
            },
            error: function() {
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi',
                    text: 'Không thể gửi yêu cầu. Vui lòng thử lại.',
                    confirmButtonText: 'OK'
                });
            }
        });
    });
</script>

<style>
    /* Overall layout */
body {
    font-family: 'Arial', sans-serif;
    background-color: #f7f7f7;
    padding: 20px;
}

/* Form container */
form {
    background-color: #fff;
    padding: 30px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    max-width: 800px;
    margin: 0 auto;
}

/* Form title */
h2 {
    font-size: 24px;
    font-weight: 600;
    color: #333;
    margin-bottom: 20px;
}

/* Input fields */
.form-group label {
    font-size: 14px;
    font-weight: 500;
    color: #555;
    margin-bottom: 8px;
    display: block;
}

/* Styling for input fields */
.form-control {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ddd;
    border-radius: 4px;
    margin-bottom: 20px;
    background-color: #f9f9f9;
}

/* Input field focus state */
.form-control:focus {
    border-color: #0056b3;
    outline: none;
    background-color: #fff;
}

/* Select fields */
select.form-control {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ddd;
    border-radius: 4px;
    background-color: #f9f9f9;
}


/* Avatar image */
img.mt-2 {
    border-radius: 50%;
    border: 2px solid #ddd;
}

/* Error messages */
.text-danger {
    font-size: 12px;
    color: #e74c3c;
}

/* Success message styling */
    /* Avatar image */
    img.mt-2 {
        border-radius: 50%;
        border: 2px solid #ddd;
        width: 120px; /* Increase width */
        height: 120px; /* Increase height */
        object-fit: cover; /* Ensures the image fills the container without distortion */
    }


</style>