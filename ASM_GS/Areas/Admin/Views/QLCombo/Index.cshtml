@model IPagedList<ASM_GS.Models.Combo>
@using X.PagedList
@using X.PagedList.Mvc.Core


@{
    ViewData["Title"] = "Danh Sách Combo";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<style>
    .custom-alert {
        background-color: #28a745; /* Màu nền xanh đậm hơn */
        color: #fff; /* Màu chữ trắng nổi bật */
        font-weight: bold; /* Chữ đậm hơn */
        border: 1px solid #1e7e34; /* Viền màu xanh đậm */
        padding: 10px 15px; /* Thêm khoảng cách bên trong */
        border-radius: 5px; /* Bo góc */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Đổ bóng nhẹ để nổi bật */
        white-space: nowrap;
    }

    .custom-alert button.btn-close {
        filter: brightness(0) invert(1); /* Chỉnh nút đóng thành màu trắng */
    }

    .btn-success {
        background-color: #0e92eb;
        border-color: #0e92eb;
        box-shadow: 0 0.125rem 0.25rem 0 rgba(14, 146, 235, 0.4);
    }

    .btn-success:hover,
    .btn-success:active,
    .btn-success:focus {
        background-color: #0e92eb;
        border-color: #0e92eb;
        box-shadow: 0 0.125rem 0.25rem 0 rgba(14, 146, 235, 0.4);
    }

</style>

<br />
<h1 style="margin-left: 10px">@ViewData["Title"]</h1>
<div class="d-flex justify-content-between align-items-center mb-3" style=" gap: 10px; padding: 10px;">
    <form asp-action="Index" method="get" class="form-inline d-flex align-items-center" style="margin-left: 5px;">
        <input type="hidden" name="searchTerm" value="@ViewBag.SearchTerm" />
        <label for="pageSize" class="mr-2 mb-0" style="margin-left: 10px;">Hiển thị:</label>
        <br />
        <select id="pageSize" name="pageSize" class="form-control form-control-sm" onchange="this.form.submit()" style="width: 45px; margin-left: 10px;">
            <option value="5" @(ViewBag.PageSize == 5 ? "selected" : "")>5</option>
            <option value="10" @(ViewBag.PageSize == 10 ? "selected" : "")>10</option>
            <option value="15" @(ViewBag.PageSize == 15 ? "selected" : "")>15</option>
        </select>
    </form>
    <a href="#" class="btn btn-success btn-sm" style="margin-right: 500px;padding: 10px 20px; font-size: 14px;" data-bs-toggle="modal" data-bs-target="#createComboModal" onclick="loadCreateCombo()">
        <i class="bi bi-plus"></i> Thêm Combo
    </a>

    <form id="searchForm" asp-action="Index" method="get" class="form-inline d-flex align-items-center">
        <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" placeholder="Tìm kiếm Combo..." class="form-control form-control-sm" style="margin-right: 10px; width: 200px; padding: 8px;" />

        <select name="trangThai" class="form-control form-control-sm" style="margin-right: 10px;">
            <option value="">Tất cả trạng thái</option>
            <option value="1" @(ViewBag.TrangThai == 1 ? "selected" : "")>Đang Áp Dụng</option>
            <option value="0" @(ViewBag.TrangThai == 0 ? "selected" : "")>Không Áp Dụng</option>
        </select>

        <select name="sortBy" class="form-control form-control-sm" style="margin-right: 10px;">
            <option value="TenCombo" @(ViewBag.SortBy == "TenCombo" ? "selected" : "")>Sắp xếp theo A-Z</option>
            <option value="Gia" @(ViewBag.SortBy == "Gia" ? "selected" : "")>Sắp xếp theo giá tiền</option>
        </select>
    </form>
     @if (TempData["successMessage"] != null)
    {
        <script>
            // Sử dụng SweetAlert để hiển thị thông báo thành công
            document.addEventListener('DOMContentLoaded', function () {
                Swal.fire({
                    icon: 'success',
                    title: '@TempData["successMessage"]',
                    //text: '@TempData["successMessage"]',
                    //showConfirmButton: false,
                    //timer: 2000 // Thông báo tự động ẩn sau 2 giây
                });
            });
        </script>
    }


</div>
<!-- Nút mở Modal tạo Combo -->


<!-- Modal tạo Combo -->
<div class="modal fade" id="createComboModal" tabindex="-1" aria-labelledby="createComboModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createComboModalLabel">Thêm Combo Mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="createModalContent">
                    <!-- Nội dung form tạo Combo sẽ được tải động -->
                </div>
            </div>
        </div>
    </div>
</div>


<table class="table table-striped">
    <thead>
        <tr>
            <th>#</th>
            <!-- Ẩn cột Mã Combo -->
            <th>Tên Combo</th>
            <th>Ảnh Combo</th>
            <th>Tổng Sản Phẩm</th>
            <th>Mô Tả</th>
            <th>Giá</th>
            <th>Tình Trạng</th>
            <th>Hành Động</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            int index = 1 + (Model.PageNumber - 1) * Model.PageSize;
            foreach (var combo in Model)
            {
                // Tính tổng số sản phẩm trong combo
                var totalProducts = combo.ChiTietCombos.Count;

                <tr>
                    <td>@index</td>
                    <!-- Ẩn Mã Combo -->
                    <td>@combo.TenCombo</td>
                    <td>
                        @if (!string.IsNullOrEmpty(combo.Anh))
                        {
                            <img src="@Url.Content($"~/img/AnhCombo/{System.IO.Path.GetFileName(combo.Anh)}")" alt="Ảnh Combo" style="width: 120px; height: 120px; object-fit: cover; border-radius: 10%" />
                        }
                        else
                        {
                            <span>Không có ảnh</span>
                        }
                    </td>
                    <td>@totalProducts</td>
                    <td>@(string.IsNullOrEmpty(combo.MoTa) ? "Không có mô tả" : combo.MoTa)</td>
                    <td>@($"{combo.Gia:N0} VNĐ")</td>
                    <td>@(combo.TrangThai == 1 ? "Đang Áp Dụng" : "Không Áp Dụng")</td>
                    <td>
                        <div class="btn-group">
                            <button type="button" class="btn btn-sm" data-bs-toggle="dropdown" aria-expanded="false" style="background-color: transparent; border: none; color: inherit; font-size: 20px;">
                                :
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#comboDetailsModal" onclick="loadComboDetails('@combo.MaCombo')">
                                        <i class="bi bi-eye"></i> Xem
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#editComboModal" onclick="loadEditCombo('@combo.MaCombo')">
                                        <i class="bi bi-pencil-square"></i> Sửa
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item text-danger" href="#" onclick="showDeleteModal('@Url.Action("Delete", "QLCombo", new { id = combo.MaCombo })')">
                                        <i class="bi bi-trash"></i> Xóa
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </td>

                </tr>
                index++;
            }
        }
        else
        {
            <tr>
                <td colspan="8" class="text-center">Không tìm thấy Combo nào.</td>
            </tr>
        }
    </tbody>
</table>



<!-- Modal xác nhận xóa -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa combo này?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <a id="confirmDeleteButton" href="#" class="btn btn-danger">Xóa</a>
            </div>
        </div>
    </div>
</div>
<!-- Cấu trúc Modal -->
<div class="modal fade" id="comboDetailsModal" tabindex="-1" aria-labelledby="comboDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="comboDetailsModalLabel">Chi Tiết Combo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Nội dung sẽ được tải động -->
                <div id="modalContent">
                    <!-- Chi tiết Combo sẽ được hiển thị tại đây -->
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal Sửa Combo -->
<div class="modal fade" id="editComboModal" tabindex="-1" aria-labelledby="editComboModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editComboModalLabel">Sửa Combo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="editModalContent">
                    <!-- Nội dung form Sửa Combo sẽ được tải động -->
                </div>
            </div>
        </div>
    </div>
</div>


<div class="d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = ViewBag.PageSize, searchTerm = ViewBag.SearchTerm }),
            new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        LinkToFirstPageFormat = "Trang đầu",
        LinkToLastPageFormat = "Trang cuối",
        LinkToPreviousPageFormat = "«",
        LinkToNextPageFormat = "»",
        MaximumPageNumbersToDisplay = 5,
        ContainerDivClasses = new[] { "pagination" },
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    })
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
   @*  // Tự động ẩn thông báo sau 2 giây (2000 ms)
    setTimeout(function () {
        var successMessage = document.querySelector(".alert-success");
        if (successMessage) {
            successMessage.style.display = "none";
        }
    }, 2000); *@

function showDeleteModal(deleteUrl) {
    // Sử dụng SweetAlert để hiển thị thông báo xác nhận
    Swal.fire({
        title: 'Xác nhận xóa',
        text: 'Bạn có chắc chắn muốn xóa combo này?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Xóa',
        cancelButtonText: 'Hủy'
    }).then((result) => {
        if (result.isConfirmed) {
            // Chuyển hướng đến đường dẫn xóa nếu người dùng xác nhận
            window.location.href = deleteUrl;
        }
    });
}

    function loadComboDetails(maCombo) {
        $.ajax({
            url: '/Admin/QLCombo/Details', // Đường dẫn đến action Details
            type: 'GET',
            data: { id: maCombo },
            success: function (response) {
                // Tải dữ liệu vào nội dung modal
                $('#modalContent').html(response);
            },
            error: function () {
                $('#modalContent').html('<p class="text-danger">Không thể tải chi tiết combo. Vui lòng thử lại sau.</p>');
            }
        });
    }
    function loadEditCombo(maCombo) {
        $.ajax({
            url: '/Admin/QLCombo/Edit', // Đường dẫn đến action Edit
            type: 'GET',
            data: { id: maCombo },
            success: function (response) {
                // Tải dữ liệu (form chỉnh sửa) vào nội dung modal
                $('#editModalContent').html(response);
                // Khởi tạo lại các sự kiện hoặc điều khiển nếu cần
            },
            error: function () {
                $('#editModalContent').html('<p class="text-danger">Không thể tải thông tin combo. Vui lòng thử lại sau.</p>');
            }
        });
    }
    function loadCreateCombo() {
        $.ajax({
            url: '/Admin/QLCombo/Create', // Đường dẫn đến action CreateCombo
            type: 'GET',
            success: function (response) {
                // Tải dữ liệu (form tạo mới) vào nội dung modal
                $('#createModalContent').html(response);
            },
            error: function () {
                $('#createModalContent').html('<p class="text-danger">Không thể tải form tạo Combo. Vui lòng thử lại sau.</p>');
            }
        });
    }

       // Tìm phần tử input và thêm sự kiện 'input'
    document.querySelector('input[name="searchTerm"]').addEventListener('input', function(event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định (nếu có)

        var searchTerm = this.value.trim(); // Lấy giá trị nhập vào, bao gồm cả dấu tiếng Việt

        // Gửi yêu cầu AJAX ngay lập tức khi có thay đổi trong ô tìm kiếm
        $.ajax({
            url: '/Admin/QLCombo/Index', // Thay URL này bằng đường dẫn đến action tìm kiếm
            type: 'GET',
            data: { searchTerm: searchTerm },
            success: function(response) {
                // Cập nhật kết quả tìm kiếm ngay khi nhận được phản hồi
                $('#searchResultsContainer').html(response);
            },
            error: function() {
                console.error('Không thể tải kết quả tìm kiếm. Vui lòng thử lại sau.');
            }
        });
    });
        document.querySelector('select[name="trangThai"]').addEventListener('change', function() {
        document.getElementById('searchForm').submit(); // Gửi biểu mẫu khi thay đổi trạng thái
    });

    document.querySelector('select[name="sortBy"]').addEventListener('change', function() {
        document.getElementById('searchForm').submit(); // Gửi biểu mẫu khi thay đổi sắp xếp
    });
</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
