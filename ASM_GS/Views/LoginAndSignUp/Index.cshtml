@model ASM_GS.Models.LoginModelView
@{
    Layout = null;
}


<!DOCTYPE html>
<html lang="en" data-bs-theme="light">

<head>
    <title>Care - Beauty Store Bootstrap 5 HTML CSS Template</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="format-detection" content="telephone=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="author" content="TemplatesJungle">
    <meta name="keywords" content="ecommerce,fashion,store">
    <meta name="description" content="Beauty Store Bootstrap 5 HTML CSS Template">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="icomoon/icomoon.css">
    <link rel="stylesheet" type="text/css" href="css/vendor.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css" />
    <link rel="stylesheet" type="text/css" href="style.css">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Pinyon+Script&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.0/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lora:wght@400;500&family=Prata&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Tangerine:wght@400;700&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Bodoni+Moda:ital,opsz,wght@0,6..96,400..900;1,6..96,400..900&family=Dancing+Script:wght@400..700&family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Playball&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Tangerine:wght@400;700&display=swap" rel="stylesheet">
    <meta name="google-signin-client_id" content="@ViewData["GoogleClientId"]">
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
          rel="stylesheet" />

    <!-- Icons. Uncomment required icon fonts -->
    <link rel="stylesheet" href="@Url.Content("~/assets/vendor/fonts/boxicons.css")" />

    <!-- Core CSS -->
    <link rel="stylesheet" href="@Url.Content("~/assets/vendor/css/core.css")" class="template-customizer-core-css" />
    <link rel="stylesheet" href="@Url.Content("~/assets/vendor/css/theme-default.css")" class="template-customizer-theme-css" />
    <link rel="stylesheet" href="@Url.Content("~/assets/css/demo.css")" />

    <!-- Vendors CSS -->
    <link rel="stylesheet" href="@Url.Content("~/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css")" />

    <!-- Page CSS -->
    <!-- Helpers -->
    <script src="@Url.Content("~/assets/vendor/js/helpers.js")"></script>

    <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->
    <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->
    <script src="@Url.Content("~/assets/js/config.js")"></script>
</head>

<body class="homepage">

    <!-- Thêm video background -->
    <video id="background-video" class="background-video" autoplay loop playsinline>
        <source src="@Url.Content("~/videos/Dior Forever - The Iconic Clean Foundation.mp4")" type="video/mp4">
        Your browser does not support the video tag.
    </video>

    <!-- Nội dung trang -->
    <br>
    <br>
    <div class="cont" style="margin-top:150px; margin-bottom: 300px; height: 800px">
        <div class="form sign-in">
            <div style="text-align:center">
                <span style="font-size: 4rem;text-align:center;color:black">Đăng Nhập</span>
            </div>
            <br>
            <form id="loginForm">
                <label>
                    <span class="HienThi">Tài Khoản / Email</span>
                    <input asp-for="EmailOrUsername" id="EmailOrUsername" />
                    <span id="errorEmailOrUsername" class="text-danger"></span>
                </label>

                <label>
                    <span class="HienThi">Mật Khẩu</span>
                    <input asp-for="Password" type="password" id="Password" />
                    <span id="errorPassword" class="text-danger"></span>
                </label>

                <a class="forgot-pass" style="color:black" data-bs-toggle="modal" data-bs-target="#myModal3">Quên mật Khẩu?</a>
                <button type="button" class="submit" onclick="submitLogin()" style="background-color:lightpink">Đăng Nhập</button>
                <br>
                <span id="errorMessages" class="text-danger"></span>
                <p style="text-align: center">or</p>
                <div id="my-signin2"></div>
            </form>
        </div>
        <div class="sub-cont">
            <div class="img">
                <div class="img__text m--up">
                    <h3 class="pinyon-script-regular" style="font-size: 2.2rem; color: white">Bạn chưa có tài khoản? Đăng ký ngay!</h3>
                </div>
                <div class="img__text m--in">
                    <h3 class="pinyon-script-regular" style="font-size: 2.2rem; color: white">Bạn đã có tài khoản ? Đăng nhập ngay!</h3>

                </div>
                <div class="img__btn">
                    <span class="m--up">Đăng Ký</span>
                    <span class="m--in">Đăng nhập</span>
                </div>
            </div>
            <form id="signUpForm">
                <div class="form sign-up" style="background: rgba(255, 255, 255, 0.6)">
                    <div style="text-align:center">
                        <span style="font-size: 4rem; text-align:center;color:black">Đăng Ký</span>
                    </div>
                    <label>
                        <span class="HienThi">Tài Khoản</span>
                        <input type="text" id="SignUpUsername" />
                        <span id="errorSignUpUsername" class="text-danger"></span>
                    </label>

                    <label>
                        <span class="HienThi">Email</span>
                        <input type="email" id="SignUpEmail" />
                        <span id="errorSignUpEmail" class="text-danger"></span>
                    </label>

                    <label>
                        <span class="HienThi">Mật Khẩu</span>
                        <input type="password" id="SignUpPassword" />
                        <span id="errorSignUpPassword" class="text-danger"></span>
                    </label>

                    <label>
                        <span class="HienThi">Nhập lại mật khẩu</span>
                        <input type="password" id="SignUpConfirmPassword" />
                        <span id="errorSignUpConfirmPassword" class="text-danger"></span>
                    </label>

                    <button type="button" class="submit" onclick="submitSignUp()" style="background-color:lightpink">Đăng Ký</button>
                    <div id="signUpErrorMessages" class="text-danger" style="text-align:center"></div>
                </div>
            </form>

        </div>
    </div>
    <!-- The Modal -->
    <div class="modal" id="myModal" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Thông Tin Bổ Sung</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="createCustomerForm" method="post" enctype="multipart/form-data">
                    <div class="card-body">
                        <div class="d-flex align-items-start align-items-sm-center gap-4">
                            <img src="../assets/img/avatars/1.png" alt="user-avatar" class="d-block rounded" height="100" width="100" id="uploadedAvatar" />
                            <div class="button-wrapper">
                                <label for="upload" class="btn btn-primary me-2 mb-4" tabindex="0">
                                    <span class="d-none d-sm-block" style="color:white">Thêm Ảnh</span>
                                    <i class="bx bx-upload d-block d-sm-none"></i>
                                    <input type="file" id="upload" name="Anh" class="account-file-input" hidden accept="image/png, image/jpeg" />
                                </label>
                                <p class="text-muted mb-0">Định dạng file JPG, GIF or PNG. </p>
                            </div>
                        </div>
                        <span id="errorAnh" class="text-danger"></span>
                    </div>

                    <div class="card mb-4">
                        <h5 class="card-header">Thông Tin Khách Hàng</h5>
                        <hr class="my-0" />
                        <div class="card-body">
                            <div class="row">
                                <div class="mb-3 col-md-6">
                                    <label>Họ và Tên</label>
                                    <input id="TenKhachHang" name="TenKhachHang" type="text" class="form-control" />
                                    <span id="errorTenKhachHang" class="text-danger"></span>
                                </div>
                                <div class="mb-3 col-md-6">
                                    <label class="form-label">Số Điện Thoại</label>
                                    <input id="SoDienThoai" name="SoDienThoai" type="string" class="form-control" />
                                    <span id="errorSoDienThoai" class="text-danger"></span>
                                </div>
                                <div class="mb-3 col-md-6">
                                    <label class="form-label">Địa Chỉ</label>
                                    <input id="DiaChi" name="DiaChi" type="text" class="form-control" />
                                    <span id="errorDiaChi" class="text-danger"></span>
                                </div>
                                <div class="mb-3 col-md-6">
                                    <label class="form-label">Giới Tính</label>
                                    <select id="GioiTinh" name="GioiTinh" class="form-control">
                                        <option value="Nam">Nam</option>
                                        <option value="Nữ">Nữ</option>
                                    </select>
                                </div>
                                <div class="mb-3 col-md-6">
                                    <label class="form-label">Căn Cước</label>
                                    <input id="Cccd" name="Cccd" type="text" class="form-control" />
                                    <span id="errorCccd" class="text-danger"></span>
                                </div>
                                <div class="mb-3 col-md-6">
                                    <label class="form-label">Ngày Sinh</label>
                                    <input type="date" id="NgaySinh" name="NgaySinh" class="form-control" />
                                    <span id="errorNgaySinh" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="mt-2">
                                <button type="submit" class="btn btn-primary me-2">Thêm Thông Tin</button>
                                <button type="reset" class="btn btn-outline-secondary" data-bs-dismiss="modal">Hủy</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="modal" id="myModal3">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Quên mật khẩu</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    <div style="margin-bottom: 15px;">
                        <input type="email" id="emailInput" placeholder="Nhập email của bạn" style="width: 100%; margin-bottom: 10px;" />
                    </div>
                    <div class="input-group">
                        <input type="text" id="verificationCode" placeholder="Nhập mã xác nhận" style="flex: 1;" />
                        <button id="sendCodeButton" onclick="sendVerificationCode()" style="border: 1px solid grey; border-radius: 10px; color: black; background-color: deepskyblue">
                            Gửi mã xác nhận
                        </button>
                    </div>
                    <p id="statusMessage" style="color: black; margin-top: 10px;"></p>
                </div>
               <!-- Modal footer -->
                <div class="modal-footer">
                    <button id="verifyButton" onclick="verifyCode()" style="color: black; border: 1px solid grey; border-radius: 10px">Xác nhận</button>
                </div>

            </div>
        </div>
    </div>

    <div style="width: 100%; height: 100%;">
        <div id="tawk-bubble-container" role="button" tabindex="0" class="tawk-bubble-container" onclick="toggleChatBox()">
            <div class="tawk-icon-right">
                <i role="button" tabindex="0" data-text="Đóng" aria-label="Đóng" class="tawk-icon tawk-icon-close tawk-icon-small"></i>
                <img src="~/images/Remove-bg.ai_1731571250485.png" alt="Thu hút chú ý đến tính năng trò chuyện" style="max-width: 124px;height: 100%; border-radius:10px">
            </div>
        </div>
        <div id="chat-box" class="chat-box" style="display: none;">
            <div class="chat-header">Hộp Thoại Hỗ Trợ</div>
            <div class="chat-body" id="chat-body">
                <div class="chat-message">Chào Chủ Nhân! Chủ nhân muốn Rem hỗ trợ gì ạ?</div>
            </div>
            <div class="chat-input-container">
                <input type="text" id="user-input" placeholder="Nhập câu hỏi..." class="chat-input">
                <button onclick="sendMessage()" class="chat-send-button">Gửi</button>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        const myModal = document.getElementById('myModal');
        myModal.addEventListener('hidden.bs.modal', function (event) {
            // SweetAlert confirm dialog
            Swal.fire({
                title: 'Bạn có muốn bỏ qua bước này không?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Có',
                cancelButtonText: 'Không'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Gọi AJAX để tạo khách hàng mặc định
                    $.ajax({
                        url: '/LoginAndSignUp/CreateDefaultCustomer',
                        type: 'POST',
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: response.message,
                                    showConfirmButton: false,
                                    timer: 1500
                                }).then(() => {
                                    window.location.href = "Home";
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'Đã có lỗi xảy ra.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                        }
                    });
                } else {
                    // Show the modal again if the user cancels
                    const modalInstance = bootstrap.Modal.getInstance(myModal);
                    modalInstance.show();
                }
            });
        });

    </script>

    <script>
        const searchForm = document.getElementById("search-form");
        const clearIcon = document.getElementById("clear-icon");
        searchForm.addEventListener("input", function () {
            if (searchForm.value.length > 0) {
                clearIcon.style.display = "inline";
            } else {
                clearIcon.style.display = "none";
            }
        });
        clearIcon.addEventListener("click", function () {
            searchForm.value = "";
            clearIcon.style.display = "none";
            searchForm.focus();
        });
    </script>

    <script>
        const video = document.getElementById("background-video");
        video.pause();
        document.body.addEventListener("click", function () {
            video.volumn = "0.05";
            video.currentTime = 0;
            video.muted = false;
            video.play();
            document.body.removeEventListener("click", arguments.callee);
        });
    </script>
    <script>
        document.querySelector('.img__btn').addEventListener('click', function () {
            document.querySelector('.cont').classList.toggle('s--signup');
        });
    </script>
    <script src="js/jquery.min.js"></script>
    <script src="js/plugins.js"></script>
    <script src="js/SmoothScroll.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>
    <script src="js/script.js"></script>
    <script>
        function toggleChatBox() {
            const chatBox = document.getElementById("chat-box");
            chatBox.style.display = chatBox.style.display === "none" ? "block" : "none";
        }
        async function sendMessage() {
            const userInput = document.getElementById("user-input").value;
            const chatBody = document.getElementById("chat-body");
            if (userInput.trim() !== "") {
                const userMessage = document.createElement("div");
                userMessage.className = "chat-message";
                userMessage.textContent = "Chủ nhân: " + userInput;
                chatBody.appendChild(userMessage);
                const waitingMessage = document.createElement("div");
                waitingMessage.className = "chat-message chat-message-waiting";
                waitingMessage.textContent = "Rem-Chan: Đang xử lý...";
                chatBody.appendChild(waitingMessage);
                console.log(userInput);
                // Send the user input to the backend
                const response = await fetch('@Url.Action("TraLoi", "Home")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(userInput)
                });
                const data = await response.json();
                chatBody.removeChild(waitingMessage);
                const responseMessage = document.createElement("div");
                responseMessage.className = "chat-message";
                responseMessage.textContent = "Rem: " + data.response;
                chatBody.appendChild(responseMessage);
                document.getElementById("user-input").value = "";
                chatBody.scrollTop = chatBody.scrollHeight;
            }
        }
    </script>
    <script>
        const recordBtn = document.getElementById("record");
        const searchInput = document.getElementById("search-form");
        let SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
        let recognition;
        let recording = false;
        function speechToText() {
            try {
                recognition = new SpeechRecognition();
                recognition.lang = "vi";
                recognition.interimResults = true;
                recording = true;
                recognition.start();
                recordBtn.classList.add("recording");
                recognition.onresult = (event) => {
                    const speechResult = event.results[0][0].transcript;
                    if (event.results[0].isFinal) {
                        searchInput.value = speechResult;
                    } else {
                        searchInput.placeholder = "Đang nghe...";
                    }
                };
                recognition.onspeechend = () => {
                    stopRecording();
                };
                recognition.onerror = (event) => {
                    stopRecording();
                    if (event.error === "no-speech") {
                        alert("Không phát hiện giọng nói, vui lòng thử lại.");
                    } else if (event.error === "audio-capture") {
                        alert("Không tìm thấy micro.");
                    } else if (event.error === "not-allowed") {
                        alert("Không có quyền sử dụng micro.");
                    } else {
                        alert("Lỗi: " + event.error);
                    }
                };
            } catch (error) {
                recording = false;
                console.error("Lỗi khi khởi tạo nhận dạng giọng nói:", error);
            }
        }
        recordBtn.addEventListener("click", () => {
            if (!recording) {
                speechToText();
            } else {
                stopRecording();
            }
        });
        function stopRecording() {
            recognition.stop();
            recording = false;
            searchInput.placeholder = "Nhập và nhấn enter";
            recordBtn.classList.remove("recording");
            recordBtn.innerHTML = '<i class="bi bi-mic"></i>';
        }
    </script>
    <script>
        function onSuccess(response) {
            const credential = response.credential;
            const user = parseJwt(credential);
            const name = user.name;
            const email = user.email;
            const picture = user.picture;
            console.log(name);
            console.log(email);
            console.log(picture);

            $.ajax({
                url: '/LoginAndSignUp/CreateCustomerFromGoogleLogin',
                type: 'POST',
                data: JSON.stringify({ name: name, email: email, picture: picture }),
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (result) {
                    if (result.Message === "Đã tạo tài khoản và khách hàng mới thành công.") {
                        Swal.fire({
                            icon: 'success',
                            title: 'Đã tạo tài khoản và khách hàng mới thành công.',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.href = '/Home';
                        });
                    } else {
                        Swal.fire({
                            icon: 'success',
                            title: 'Đăng nhập thành công',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.href = '/Home';
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Lỗi khi tạo tài khoản:", error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Đã tạo tài khoản thành công, vui lòng thao tác lại',
                        showConfirmButton: true
                    });
                }
            });
        }

        function onFailure() {
            document.getElementById("errorMessages").innerText = "Đăng nhập thất bại. Vui lòng thử lại.";
        }

        function parseJwt(token) {
            const base64Url = token.split('.')[1];
            const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
            const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {
                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
            }).join(''));
            return JSON.parse(jsonPayload);
        }

        window.onload = function () {
            google.accounts.id.initialize({
                client_id: "@(ViewData["GoogleClientId"])",
                callback: onSuccess,
                cancel_on_tap_outside: false // Optional
            });
            google.accounts.id.renderButton(
                document.getElementById("my-signin2"),
                { theme: "dark", size: "large" }  // Customizations for the button
            );
            google.accounts.id.prompt(); // Show the One Tap prompt
        };
    </script>
    <script src="https://apis.google.com/js/platform.js?onload=renderButton" async defer></script>
    <script src="https://accounts.google.com/gsi/client" async defer></script>
    <script>

        function verifyCode() {
            const email = document.getElementById('emailInput').value;
            const code = document.getElementById('verificationCode').value;
            const statusMessage = document.getElementById('statusMessage');
            if (!email || !code) {
                statusMessage.textContent = 'Email và mã xác nhận không được để trống.';
                return;
            }
            $.ajax({
                url: '/LoginAndSignUp/VerifyCode', 
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ email: email, code: code }),
                success: function (response) {
                    if (response.success) {
                        window.location.href = response.redirectUrl;
                    } else {
                        // Hiển thị thông báo lỗi
                        statusMessage.textContent = response.message;
                    }
                },
                error: function () {
                    statusMessage.textContent = 'Có lỗi xảy ra. Vui lòng thử lại.';
                }
            });
        }
        function submitLogin() {
            $('#errorEmailOrUsername').empty();
            $('#errorPassword').empty();
            $('#errorMessages').empty();
            $.ajax({
                url: '@Url.Action("Index", "LoginAndSignUp")',
                type: 'POST',
                dataType: "json",
                data: {
                    EmailOrUsername: $('#EmailOrUsername').val(),
                    Password: $('#Password').val()
                },
                success: function (response) {
                    if (response.success) {
                        window.location.href = "https://localhost:7265/LoginAndSignUp";
                    } else {
                        if (response.errors) {
                            if (response.errors.EmailOrUsername) {
                                $('#errorEmailOrUsername').html(response.errors.EmailOrUsername);
                            }
                            if (response.errors.Password) {
                                $('#errorPassword').html(response.errors.Password);
                            }
                        } else if (response.message) {
                            $('#errorMessages').append('<p>' + response.message + '</p>');
                        }
                    }
                },
                error: function () {
                    $('#errorMessages').append('<p>Có lỗi xảy ra, vui lòng thử lại sau.</p>');        // Clear previous error messages for each field
                }
            });
        }
        function submitSignUp() {

            $('#errorSignUpUsername').empty();
            $('#errorSignUpEmail').empty();
            $('#errorSignUpPassword').empty();
            $('#errorSignUpConfirmPassword').empty();
            $('#signUpErrorMessages').empty();
            $.ajax({
                url: '@Url.Action("SignUp", "LoginAndSignUp")',
                type: 'POST',
                dataType: "json",
                data: {
                    TenTaiKhoan: $('#SignUpUsername').val(),
                    Email: $('#SignUpEmail').val(),
                    Password: $('#SignUpPassword').val(),
                    ConfirmPassword: $('#SignUpConfirmPassword').val()
                },
                success: function (response) {
                    if (response.success) {
                        const modalElement = $('#myModal');
                        modalElement.addClass('fade-in');
                        modalElement.modal('show');
                        setTimeout(() => {
                            modalElement.addClass('show-opacity');
                        }, 50);
                        const notification = $('#successNotification');
                        notification.css('display', 'block').css('opacity', '1');
                        setTimeout(() => {
                            notification.css('opacity', '0');
                            setTimeout(() => {
                                notification.css('display', 'none');
                            }, 500);
                        }, 3000);
                    }
                    else if (response.errors) {
                        if (response.errors.TenTaiKhoan) {
                            $('#errorSignUpUsername').html(response.errors.TenTaiKhoan);
                        }
                        if (response.errors.Email) {
                            $('#errorSignUpEmail').html(response.errors.Email);
                        }
                        if (response.errors.Password) {
                            $('#errorSignUpPassword').html(response.errors.Password);
                        }
                        if (response.errors.ConfirmPassword) {
                            $('#errorSignUpConfirmPassword').html(response.errors.ConfirmPassword);
                        }
                    } else if (response.message) {
                        $('#signUpErrorMessages').append('<p>' + response.message + '</p>');
                    }
                },
                error: function () {
                    $('#signUpErrorMessages').append('<p>Something went wrong. Please try again later.</p>');
                }
            });
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            $('#createCustomerForm').submit(function (e) {
                e.preventDefault();
                $('#errorTenKhachHang').empty();
                $('#errorSoDienThoai').empty();
                $('#errorDiaChi').empty();
                $('#errorCccd').empty();
                $('#errorNgaySinh').empty();
                $('#errorAnh').empty();  // Reset lỗi của trường Anh (ảnh)

                var formData = new FormData(this);
                $.ajax({
                    url: '@Url.Action("CreateCustomer", "LoginAndSignUp")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            window.location.href = '/home';
                        } else {
                            // Display errors if validation fails
                            if (response.errors.TenKhachHang) {
                                $('#errorTenKhachHang').html(response.errors.TenKhachHang);
                            }
                            if (response.errors.SoDienThoai) {
                                $('#errorSoDienThoai').html(response.errors.SoDienThoai);
                            }
                            if (response.errors.DiaChi) {
                                $('#errorDiaChi').html(response.errors.DiaChi);
                            }
                            if (response.errors.Cccd) {
                                $('#errorCccd').html(response.errors.Cccd);
                            }
                            if (response.errors.NgaySinh) {
                                $('#errorNgaySinh').html(response.errors.NgaySinh);
                            }
                            if (response.errors.Anh) {  // Kiểm tra lỗi Anh (ảnh)
                                $('#errorAnh').html(response.errors.Anh);
                            }
                        }
                    },
                    error: function () {
                        alert('Có lỗi xảy ra. Vui lòng thử lại sau.');
                    }
                });
            });
        });
    </script>
    <script src="@Url.Content("~/assets/vendor/libs/jquery/jquery.js")"></script>
    <script src="@Url.Content("~/assets/vendor/libs/popper/popper.js")"></script>
    <script src="@Url.Content("~/assets/vendor/js/bootstrap.js")"></script>
    <script src="@Url.Content("~/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js")"></script>
    <script src="@Url.Content("~/assets/vendor/js/menu.js")"></script>
    <script src="@Url.Content("~/assets/js/main.js")"></script>
    <script src="@Url.Content("~/assets/js/pages-account-settings-account.js")"></script>
    <script async defer src="https://buttons.github.io/buttons.js"></script>
    <script>
        let countdownInterval;

        function sendVerificationCode() {
            const emailInput = document.getElementById("emailInput");
            const sendCodeButton = document.getElementById("sendCodeButton");
            const statusMessage = document.getElementById("statusMessage");
            const email = emailInput.value;


            if (!email.trim()) {
                statusMessage.textContent = "Email không được để trống.";
                return;
            }
            fetch("/LoginAndSignUp/SendVerificationCode", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ email })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        statusMessage.textContent = data.message;

                        emailInput.disabled = true;
                        emailInput.style.backgroundColor = "grey";
                        sendCodeButton.disabled = true;
                        sendCodeButton.style.backgroundColor = "grey";

                        startCountdown(60, () => {
                            emailInput.disabled = false;
                            emailInput.style.backgroundColor = "white";
                            sendCodeButton.disabled = false;
                            sendCodeButton.style.backgroundColor = "deepskyblue";
                            sendCodeButton.textContent = "Gửi mã xác nhận";
                        });
                    } else {
                        // Hiển thị thông báo lỗi
                        statusMessage.textContent = data.message;
                    }
                })
                .catch(error => {
                    console.error("Error sending verification code:", error);
                    statusMessage.textContent = "Có lỗi xảy ra. Vui lòng thử lại.";
                });
        }

        function startCountdown(seconds, onCountdownEnd) {
            let timer = seconds;
            const sendCodeButton = document.getElementById("sendCodeButton");

            sendCodeButton.textContent = `${timer}s`;

            countdownInterval = setInterval(() => {
                timer--;
                sendCodeButton.textContent = `${timer}s`;

                if (timer <= 0) {
                    clearInterval(countdownInterval);
                    onCountdownEnd();
                }
            }, 1000);
        }

    </script>
</body>

</html>
<style>
    .background-video, .background-image {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        z-index: -9999;
    }
</style>
<style>
    *,
    *:before,
    *:after {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    .fade-in {
        opacity: 0;
        transition: opacity 0.5s ease-in-out;
    }

    .show-opacity {
        opacity: 1;
    }

    body {
        font-family: 'Open Sans', Helvetica, Arial, sans-serif;
        background: #ffffff;
    }

    .pinyon-script-regular {
        font-family: "Pinyon Script", cursive;
        font-weight: 400;
        font-style: normal;
    }

    .poppins-thin {
        font-family: "Poppins", sans-serif;
        font-weight: 100;
        font-style: normal;
    }

    .poppins-extralight {
        font-family: "Poppins", sans-serif;
        font-weight: 200;
        font-style: normal;
    }

    .poppins-light {
        font-family: "Poppins", sans-serif;
        font-weight: 300;
        font-style: normal;
    }

    .poppins-regular {
        font-family: "Poppins", sans-serif;
        font-weight: 400;
        font-style: normal;
    }

    .poppins-medium {
        font-family: "Poppins", sans-serif;
        font-weight: 500;
        font-style: normal;
    }

    .poppins-semibold {
        font-family: "Poppins", sans-serif;
        font-weight: 600;
        font-style: normal;
    }

    .poppins-bold {
        font-family: "Poppins", sans-serif;
        font-weight: 700;
        font-style: normal;
    }

    .poppins-extrabold {
        font-family: "Poppins", sans-serif;
        font-weight: 800;
        font-style: normal;
    }

    .poppins-black {
        font-family: "Poppins", sans-serif;
        font-weight: 900;
        font-style: normal;
    }

    .poppins-thin-italic {
        font-family: "Poppins", sans-serif;
        font-weight: 100;
        font-style: italic;
    }

    .poppins-extralight-italic {
        font-family: "Poppins", sans-serif;
        font-weight: 200;
        font-style: italic;
    }

    .poppins-light-italic {
        font-family: "Poppins", sans-serif;
        font-weight: 300;
        font-style: italic;
    }

    .poppins-regular-italic {
        font-family: "Poppins", sans-serif;
        font-weight: 400;
        font-style: italic;
    }

    .poppins-medium-italic {
        font-family: "Poppins", sans-serif;
        font-weight: 500;
        font-style: italic;
    }

    .poppins-semibold-italic {
        font-family: "Poppins", sans-serif;
        font-weight: 600;
        font-style: italic;
    }

    .poppins-bold-italic {
        font-family: "Poppins", sans-serif;
        font-weight: 700;
        font-style: italic;
    }

    .poppins-extrabold-italic {
        font-family: "Poppins", sans-serif;
        font-weight: 800;
        font-style: italic;
    }

    .poppins-black-italic {
        font-family: "Poppins", sans-serif;
        font-weight: 900;
        font-style: italic;
    }

    input,
    button {
        border: none;
        outline: none;
        background: none;
        font-family: 'Open Sans', Helvetica, Arial, sans-serif;
    }

    .tip {
        font-size: 20px;
        margin: 40px auto 50px;
        text-align: center;
    }

    .cont {
        border-radius: 20px;
        overflow: hidden;
        position: relative;
        width: 900px;
        height: 750px;
        margin: 0 auto 100px;
        background: #fff;
        box-shadow: -10px -10px 15px rgba(255, 255, 255, 0.5), 10px 10px 15px rgba(70, 70, 70, 0.15), inset -10px -10px 15px rgba(255, 255, 255, 0.5), inset 10px 10px 15px rgba(70, 70, 70, 0.15);
    }

    .form {
        position: relative;
        width: 640px;
        height: 100%;
        -webkit-transition: -webkit-transform 1.2s ease-in-out;
        transition: -webkit-transform 1.2s ease-in-out;
        transition: transform 1.2s ease-in-out;
        transition: transform 1.2s ease-in-out, -webkit-transform 1.2s ease-in-out;
        padding: 50px 30px 0;
        background-color: #fef4f3;
    }

    .sub-cont {
        overflow: hidden;
        position: absolute;
        left: 640px;
        top: 0;
        width: 900px;
        height: 100%;
        padding-left: 260px;
        background: #fff;
        -webkit-transition: -webkit-transform 1.2s ease-in-out;
        transition: -webkit-transform 1.2s ease-in-out;
        transition: transform 1.2s ease-in-out;
        transition: transform 1.2s ease-in-out, -webkit-transform 1.2s ease-in-out;
    }

    .cont.s--signup .sub-cont {
        -webkit-transform: translate3d(-640px, 0, 0);
        transform: translate3d(-640px, 0, 0);
    }

    button {
        display: block;
        margin: 0 auto;
        width: 260px;
        height: 36px;
        border-radius: 30px;
        color: #fff;
        font-size: 15px;
        cursor: pointer;
    }

    .img {
        overflow: hidden;
        z-index: 2;
        position: absolute;
        left: 0;
        top: 0;
        width: 260px;
        height: 100%;
        padding-top: 360px;
        background: rgba(140, 137, 137, 0);
    }

        .img:before {
            content: '';
            position: absolute;
            right: 0;
            top: 0;
            width: 900px;
            height: 100%;
            background-image: url("ext.jpg");
            opacity: .8;
            background-size: cover;
            -webkit-transition: -webkit-transform 1.2s ease-in-out;
            transition: transform 1.2s ease-in-out;
            transition: transform 1.2s ease-in-out, -webkit-transform 1.2s ease-in-out;
            background: rgba(140, 137, 137, 0.6);
        }

        .img:after {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.6);
            background: rgba(140, 137, 137, 0.6);
        }

    .cont.s--signup .img:before {
        -webkit-transform: translate3d(640px, 0, 0);
        transform: translate3d(640px, 0, 0);
        background: rgba(140, 137, 137, 0.6);
    }

    .img__text {
        z-index: 2;
        display: flex;
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        padding: 0 20px;
        text-align: center;
        align-items: center;
        color: #000000;
        -webkit-transition: -webkit-transform 1.2s ease-in-out;
        transition: -webkit-transform 1.2s ease-in-out;
        transition: transform 1.2s ease-in-out;
        transition: transform 1.2s ease-in-out, -webkit-transform 1.2s ease-in-out;
    }

        .img__text h2 {
            margin-bottom: 10px;
            font-weight: normal;
        }

        .img__text p {
            font-size: 14px;
            line-height: 1.5;
        }

    .cont.s--signup .img__text.m--up {
        -webkit-transform: translateX(520px);
        transform: translateX(520px);
    }

    .img__text.m--in {
        -webkit-transform: translateX(-520px);
        transform: translateX(-520px);
    }

    .cont.s--signup .img__text.m--in {
        -webkit-transform: translateX(0);
        transform: translateX(0);
    }

    .img__btn {
        overflow: hidden;
        z-index: 2;
        position: relative;
        width: 150px;
        height: 36px;
        margin: 0 auto;
        background: transparent;
        color: #fff;
        text-transform: uppercase;
        font-size: 15px;
        cursor: pointer;
    }

        .img__btn:after {
            content: '';
            z-index: 2;
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            border: 2px solid #fff;
            border-radius: 30px;
        }

        .img__btn span {
            position: absolute;
            left: 0;
            top: 0;
            display: -webkit-box;
            display: flex;
            -webkit-box-pack: center;
            justify-content: center;
            -webkit-box-align: center;
            align-items: center;
            width: 100%;
            height: 100%;
            -webkit-transition: -webkit-transform 1.2s;
            transition: -webkit-transform 1.2s;
            transition: transform 1.2s;
            transition: transform 1.2s, -webkit-transform 1.2s;
        }

            .img__btn span.m--in {
                -webkit-transform: translateY(-72px);
                transform: translateY(-72px);
            }

    .cont.s--signup .img__btn span.m--in {
        -webkit-transform: translateY(0);
        transform: translateY(0);
    }

    .cont.s--signup .img__btn span.m--up {
        -webkit-transform: translateY(72px);
        transform: translateY(72px);
    }

    h1 {
        text-align: center;
    }

    h2 {
        width: 100%;
        font-size: 26px;
        text-align: center;
    }

    h3 {
        transform: translateY(-150px);
    }

    label {
        display: block;
        width: 260px;
        margin: 25px auto 0;
        text-align: left;
    }

        label span {
            font-size: 12px;
            color: #cfcfcf;
            text-transform: uppercase;
        }

    input {
        display: block;
        width: 100%;
        margin-top: 5px;
        padding-left: 15px;
        padding-bottom: 5px;
        font-size: 16px;
        border-bottom: 1px solid rgba(0, 0, 0, 0.4);
        text-align: left;
    }

    .forgot-pass {
        margin-top: 15px;
        text-align: center;
        font-size: 12px;
        color: #cfcfcf;
    }

    .submit {
        margin-top: 40px;
        margin-bottom: 20px;
        background: #d4af7a;
        text-transform: uppercase;
    }

    .fb-btn {
        border: 2px solid #d3dae9;
        color: #8fa1c7;
    }

        .fb-btn span {
            font-weight: bold;
            color: #455a81;
        }

    .sign-in {
        -webkit-transition-timing-function: ease-out;
        transition-timing-function: ease-out;
    }

    .cont.s--signup .sign-in {
        -webkit-transition-timing-function: ease-in-out;
        transition-timing-function: ease-in-out;
        -webkit-transition-duration: 1.2s;
        transition-duration: 1.2s;
        -webkit-transform: translate3d(640px, 0, 0);
        transform: translate3d(640px, 0, 0);
    }

    .sign-up {
        -webkit-transform: translate3d(-900px, 0, 0);
        transform: translate3d(-900px, 0, 0);
    }

    .cont.s--signup .sign-up {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
    }

    .tangerine-regular {
        font-family: "Tangerine", cursive;
        font-weight: 400;
        font-style: normal;
    }

    .tangerine-bold {
        font-family: "Tangerine", cursive;
        font-weight: 700;
        font-style: normal;
    }
</style>
<style>
    #loginForm {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        padding: 20px;
        border-radius: 10px;
        max-width: 400px;
        margin: auto;
    }

    #my-signin2 {
        margin-top: 20px;
        margin-bottom: 20px;
    }

    #Logined {
        font-size: 1.2em;
        color: green;
    }

    #errorMessages {
        color: red;
        margin-top: 10px;
        text-align: center;
    }

    .HienThi {
        color: black;
    }
</style>
<style>
    #tawk-bubble-container {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 9999;
        cursor: pointer;
    }
    /* Định dạng cho hộp thoại */
    .chat-box {
        position: fixed;
        bottom: 110px;
        right: 20px;
        width: 500px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #fff;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        z-index: 10000;
        font-family: Arial, sans-serif;
        width: 500px;
        flex-direction: column;
        overflow: hidden;
    }

    .chat-header {
        padding: 10px;
        font-weight: bold;
        text-align: center;
        background-color: #0078d4;
        color: #fff;
        border-radius: 8px 8px 0 0;
    }

    .chat-body {
        max-height: 150px;
        overflow-y: auto;
        padding: 10px;
        font-size: 14px;
        overflow-y: auto;
        flex: 1;
    }

    .chat-message {
        margin-bottom: 8px;
    }

    .chat-input-container {
        display: flex;
        padding: 10px;
        border-top: 1px solid #ddd;
    }

    .chat-input {
        flex: 1;
        padding: 5px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .chat-send-button {
        padding: 5px 10px;
        margin-left: 5px;
        background-color: #0078d4;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .open-sans-<uniquifier > {
        font-family: "Open Sans", sans-serif;
        font-optical-sizing: auto;
        font-weight: <weight>;
        font-style: normal;
        font-variation-settings: "wdth" 100;
    }

    .cont {
        background: rgba(255, 255, 255, 0.6);
    }

    .form {
        background: rgba(254, 244, 243, 0.6);
    }

    .HienThi
    {
        color:black;
    }
    .show-opacity {
        opacity: 1;
    }
</style>