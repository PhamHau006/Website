@model IPagedList<ASM_GS.Models.Combo>
@using X.PagedList
@using X.PagedList.Mvc.Core


@{
    ViewData["Title"] = "Danh Sách Combo";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var Direct = ViewData["RedirectUrl"] as string;
}
<style>
    .custom-alert {
        background-color: #28a745; /* Màu nền xanh đậm hơn */
        color: #fff; /* Màu chữ trắng nổi bật */
        font-weight: bold; /* Chữ đậm hơn */
        border: 1px solid #1e7e34; /* Viền màu xanh đậm */
        padding: 10px 15px; /* Thêm khoảng cách bên trong */
        border-radius: 5px; /* Bo góc */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Đổ bóng nhẹ để nổi bật */
        white-space: nowrap;
    }

    .custom-alert button.btn-close {
        filter: brightness(0) invert(1); /* Chỉnh nút đóng thành màu trắng */
    }

    .btn-success {
        background-color: #0e92eb;
        border-color: #0e92eb;
        box-shadow: 0 0.125rem 0.25rem 0 rgba(14, 146, 235, 0.4);
    }

    .btn-success:hover,
    .btn-success:active,
    .btn-success:focus {
        background-color: #0e92eb;
        border-color: #0e92eb;
        box-shadow: 0 0.125rem 0.25rem 0 rgba(14, 146, 235, 0.4);
    }

</style>

<br />@* 
<h1 style="margin-left: 10px">@ViewData["Title"]</h1> *@
<div class="d-flex justify-content-between align-items-center mb-3" style=" gap: 10px; padding: 10px;">
    <form asp-action="Index" method="get" class="form-inline d-flex align-items-center" style="margin-left: 5px;">
        <input type="hidden" name="searchTerm" value="@ViewBag.SearchTerm" />
        <label for="pageSize" class="mr-2 mb-0" style="margin-left: 10px; white-space: nowrap;">Hiển thị:</label>
        <br />
        <select id="pageSize" name="pageSize" class="form-select d-inline-block w-auto" onchange="this.form.submit()" style="width: 45px; margin-left: 10px;">
            @if (ViewBag.PageSize == 5)
            {
                <option value="5" selected>5</option>
            }
            else
            {
                <option value="5">5</option>
            }

            @if (ViewBag.PageSize == 10)
            {
                <option value="10" selected>10</option>
            }
            else
            {
                <option value="10">10</option>
            }

            @if (ViewBag.PageSize == 15)
            {
                <option value="15" selected>15</option>
            }
            else
            {
                <option value="15">15</option>
            }
        </select>



    </form>
    <a href="#" class="btn btn-primary" style="padding: 10px 10px; font-size: 14px; white-space: nowrap;" data-bs-toggle="modal" data-bs-target="#createComboModal" onclick="loadCreateCombo()">
        <i class="bi bi-plus"></i> Thêm Combo
    </a>


    <form id="searchForm" asp-action="Index" method="get" class="form-inline d-flex align-items-center" style="flex-wrap: nowrap; margin-left: auto;">
        <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" placeholder="Tìm kiếm Combo..." class="form-control form-control-sm" style="margin-right: 10px; width: 200px; padding: 8px;" />

        <select name="trangThai" class="form-control form-control-sm" style="margin-right: 10px;">
            @if (ViewBag.TrangThai == null || ViewBag.TrangThai.ToString() == "")
            {
                <option value="" selected>Tất cả trạng thái</option>
            }
            else
            {
                <option value="">Tất cả trạng thái</option>
            }

            @if (ViewBag.TrangThai?.ToString() == "1")
            {
                <option value="1" selected>Đang Áp Dụng</option>
            }
            else
            {
                <option value="1">Đang Áp Dụng</option>
            }

            @if (ViewBag.TrangThai?.ToString() == "0")
            {
                <option value="0" selected>Không Áp Dụng</option>
            }
            else
            {
                <option value="0">Không Áp Dụng</option>
            }
        </select>


        <select name="sortBy" class="form-control form-control-sm" style="margin-right: 10px;">
            @if (ViewBag.SortBy == "TenCombo")
            {
                <option value="TenCombo" selected>Sắp xếp theo A-Z</option>
            }
            else
            {
                <option value="TenCombo">Sắp xếp theo A-Z</option>
            }

            @if (ViewBag.SortBy == "TenCombo_Desc")
            {
                <option value="TenCombo_Desc" selected>Sắp xếp theo Z-A</option>
            }
            else
            {
                <option value="TenCombo_Desc">Sắp xếp theo Z-A</option>
            }

            @if (ViewBag.SortBy == "Gia")
            {
                <option value="Gia" selected>Sắp xếp theo giá tiền (thấp-cao)</option>
            }
            else
            {
                <option value="Gia">Sắp xếp theo giá tiền (thấp-cao)</option>
            }

            @if (ViewBag.SortBy == "Gia_Desc")
            {
                <option value="Gia_Desc" selected>Sắp xếp theo giá tiền (cao-thấp)</option>
            }
            else
            {
                <option value="Gia_Desc">Sắp xếp theo giá tiền (cao-thấp)</option>
            }
        </select>


    </form>
     @if (TempData["successMessage"] != null)
    {
        <script>
            // Sử dụng SweetAlert để hiển thị thông báo thành công
            document.addEventListener('DOMContentLoaded', function () {
                Swal.fire({
                    icon: 'success',
                    title: '@TempData["successMessage"]',
                    //text: '@TempData["successMessage"]',
                    //showConfirmButton: false,
                    //timer: 2000 // Thông báo tự động ẩn sau 2 giây
                });
            });
        </script>
    }


</div>


<!-- Modal tạo Combo -->
<div class="modal fade" id="createComboModal" tabindex="-1" aria-labelledby="createComboModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createComboModalLabel">Thêm Combo Mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="createModalContent">
                    <!-- Nội dung form tạo Combo sẽ được tải động -->
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card" style="margin: 10px 10px;">
    <h5 class="card-header">@ViewData["Title"]</h5>
    <div class="card-body">
        <div class="table-responsive">

            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>#</th>
                        <!-- Ẩn cột Mã Combo -->
            @*          <th>Mã Combo</th>
             *@         <th>Tên Combo</th>
                        <th>Ảnh Combo</th>
                        <th>Tổng Sản Phẩm</th>
                        <th>Mô Tả</th>
                        <th>Giá</th>
                        <th>Tình Trạng</th>
                        <th>Hành Động</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        int index = 1 + (Model.PageNumber - 1) * Model.PageSize;
                        foreach (var combo in Model)
                        {
                            // Tính tổng số sản phẩm trong combo
                            var totalProducts = combo.ChiTietCombos.Count;

                            <tr>
                                <td>@index</td>
                                <!-- Ẩn Mã Combo -->
            @*                  <td>@combo.MaCombo</td>
                        *@
                                <td>
                                    <a href="#" data-bs-toggle="modal" data-bs-target="#comboDetailsModal" onclick="loadComboDetails('@combo.MaCombo')" style="text-decoration: none; color: inherit;">
                                        @combo.TenCombo
                                    </a>
                                </td>
                                <td style="padding: 10px; width: 220px;">
                                    @if (!string.IsNullOrEmpty(combo.Anh))
                                    {
                                        <img src="@Url.Content($"~/img/AnhCombo/{System.IO.Path.GetFileName(combo.Anh)}")" alt="Ảnh Combo" style="width: 50%; height: auto; object-fit: cover; border-radius: 3%;" />
                                    }
                                    else
                                    {
                                        <span>Không có ảnh</span>
                                    }
                                </td>

                                <td>@totalProducts</td>
                                <td>@(string.IsNullOrEmpty(combo.MoTa) ? "Không có mô tả" : combo.MoTa)</td>
                                <td>@($"{combo.Gia:N0} VNĐ")</td>
                                <td>
                                    @if (combo.TrangThai == 1)
                                    {
                                        <span class="badge bg-success">Đang Áp Dụng</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Không Áp Dụng</span>
                                    }
                                </td>
@*                              <td>@(combo.TrangThai == 1 ? "Đang Áp Dụng" : "Không Áp Dụng")</td>
 *@                                <td>
                                    <div class="btn-group">
                                        <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                            <i class="bx bx-dots-vertical-rounded"></i>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li>
                                                <a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#comboDetailsModal" onclick="loadComboDetails('@combo.MaCombo')">
                                                    <i class="bi bi-eye"></i> Xem
                                                </a>
                                            </li>
                                            <li>
                                            <a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#editComboModal" onclick="loadEditCombo('@combo.MaCombo')">
                                                <i class="bi bi-pencil-square"></i> Sửa
                                            </a>
                                            </li>
                                            <li>
                                                <a class="dropdown-item text-danger" href="#" onclick="showDeleteModal('@Url.Action("Delete", "QLCombo", new { id = combo.MaCombo })')">
                                                    <i class="bi bi-trash"></i> Xóa
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </td>

                            </tr>
                            index++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="8" class="text-center">Không tìm thấy Combo nào.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<!-- Modal xác nhận xóa -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa combo này?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <a id="confirmDeleteButton" href="#" class="btn btn-danger">Xóa</a>
            </div>
        </div>
    </div>
</div>
<!-- Cấu trúc Modal -->
<div class="modal fade" id="comboDetailsModal" tabindex="-1" aria-labelledby="comboDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="comboDetailsModalLabel">Chi Tiết Combo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Nội dung sẽ được tải động -->
                <div id="modalContent">
                    <!-- Chi tiết Combo sẽ được hiển thị tại đây -->
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal Sửa Combo -->
<div class="modal fade" id="editComboModal" tabindex="-1" aria-labelledby="editComboModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editComboModalLabel">Sửa Combo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="editModalContent">
                    <!-- Nội dung form Sửa Combo sẽ được tải động -->
                </div>
            </div>
        </div>
    </div>
</div>


<div class="d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = ViewBag.PageSize, searchTerm = ViewBag.SearchTerm }),
            new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        LinkToFirstPageFormat = "Trang đầu",
        LinkToLastPageFormat = "Trang cuối",
        LinkToPreviousPageFormat = "«",
        LinkToNextPageFormat = "»",
        MaximumPageNumbersToDisplay = 5,
        ContainerDivClasses = new[] { "pagination" },
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    })
</div>
<div id="loginMessage" style="display:none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background: #fff; padding: 20px; border-radius: 8px; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);width: 500px; height:300px; text-align:center; align-items: center">
    <p style="color: red; font-size: 2rem">Vui lòng đăng nhập</p>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        var directUrl = '@Direct';

        if (directUrl) {
            Swal.fire({
                icon: 'info',
                title: 'Thông báo',
                text: 'Bạn sẽ được chuyển đến trang đăng nhập.',
                showConfirmButton: false,
                timer: 3000
            }).then(() => {
                window.location.href = '/LoginAdmin';
            });
        }
    });
</script>
<!-- Bootstrap CSS -->
<script>
    function showDeleteModal(deleteUrl) {
        // Sử dụng SweetAlert để hiển thị thông báo xác nhận
        Swal.fire({
            title: 'Xác nhận xóa',
            text: 'Bạn có chắc chắn muốn xóa combo này?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Xóa',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                // Chuyển hướng đến đường dẫn xóa nếu người dùng xác nhận
                window.location.href = deleteUrl;
            }
        });
    }

    function loadComboDetails(maCombo) {
        $.ajax({
            url: '/Admin/QLCombo/Details', // Đường dẫn đến action Details
            type: 'GET',
            data: { id: maCombo },
            success: function (response) {
                // Tải dữ liệu vào nội dung modal
                $('#modalContent').html(response);
            },
            error: function () {
                $('#modalContent').html('<p class="text-danger">Không thể tải chi tiết combo. Vui lòng thử lại sau.</p>');
            }
        });
    }
    function loadEditCombo(maCombo) {
        $.ajax({
            url: '/Admin/QLCombo/Edit', // Đường dẫn đến action Edit
            type: 'GET',
            data: { id: maCombo },
            success: function (response) {
                // Tải dữ liệu (form chỉnh sửa) vào nội dung modal
                $('#editModalContent').html(response);
                // Khởi tạo lại các sự kiện hoặc điều khiển nếu cần
            },
            error: function () {
                $('#editModalContent').html('<p class="text-danger">Không thể tải thông tin combo. Vui lòng thử lại sau.</p>');
            }
        });
    }
    function loadCreateCombo() {
        $.ajax({
            url: '/Admin/QLCombo/Create', // Đường dẫn đến action CreateCombo
            type: 'GET',
            success: function (response) {
                // Tải dữ liệu (form tạo mới) vào nội dung modal
                $('#createModalContent').html(response);
            },
            error: function () {
                $('#createModalContent').html('<p class="text-danger">Không thể tải form tạo Combo. Vui lòng thử lại sau.</p>');
            }
        });
    }

       // Tìm phần tử input và thêm sự kiện 'input'
    document.querySelector('input[name="searchTerm"]').addEventListener('input', function(event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định (nếu có)

        var searchTerm = this.value.trim(); // Lấy giá trị nhập vào, bao gồm cả dấu tiếng Việt

        // Gửi yêu cầu AJAX ngay lập tức khi có thay đổi trong ô tìm kiếm
        $.ajax({
            url: '/Admin/QLCombo/Index', // Thay URL này bằng đường dẫn đến action tìm kiếm
            type: 'GET',
            data: { searchTerm: searchTerm },
            success: function(response) {
                // Cập nhật kết quả tìm kiếm ngay khi nhận được phản hồi
                $('#searchResultsContainer').html(response);
            },
            error: function() {
                console.error('Không thể tải kết quả tìm kiếm. Vui lòng thử lại sau.');
            }
        });
    });
        document.querySelector('select[name="trangThai"]').addEventListener('change', function() {
        document.getElementById('searchForm').submit(); // Gửi biểu mẫu khi thay đổi trạng thái
    });

    document.querySelector('select[name="sortBy"]').addEventListener('change', function() {
        document.getElementById('searchForm').submit(); // Gửi biểu mẫu khi thay đổi sắp xếp
    });
</script>
