@model IPagedList<ASM_GS.ViewModels.DonHangViewModel>
@using X.PagedList
@using X.PagedList.Mvc.Core
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var Direct = ViewData["RedirectUrl"] as string;
}
<h2>Danh sách đơn hàng</h2>

<head>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</head>

@if (TempData["SuccessMessage"] != null)
{
    <script>
        Swal.fire({
            icon: 'success',
            title: 'Thành công!',
            text: '@Html.Raw(TempData["SuccessMessage"].ToString())',
            showConfirmButton: true
        });
    </script>
}




@if (TempData["ErrorMessage"] != null)
{
    <script>
        Swal.fire({
            icon: 'error',
            title: 'Lỗi!',
            text: '@Html.Raw(TempData["ErrorMessage"].ToString())',
            showConfirmButton: true
        });
    </script>
}

<div class="btn-group" role="group">
    <a href="@Url.Action("Index", "DonHang", new { area = "Admin", trangThai = "all" })" class="btn btn-primary" style="margin-right:20px;">Tất Cả</a>
    <a href="@Url.Action("Index", "DonHang", new { area = "Admin", trangThai = "processing" })" class="btn btn-warning" style="margin-right:20px;">Xử Lý</a>
    <a href="@Url.Action("Index", "DonHang", new { area = "Admin", trangThai = "shipped" })" class="btn btn-info" style="margin-right:20px;">Vận Chuyển</a>
    <a href="@Url.Action("Index", "DonHang", new { area = "Admin", trangThai = "completed" })" class="btn btn-success">Đã Giao</a>
</div>
<br />
<br />
<br />
<!-- Search Input and Button -->
<div class="mb-3">
    <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm theo mã đơn hàng, tên khách hàng..." />
    <button class="btn btn-primary mt-2" id="searchBtn">Tìm kiếm</button>
    <div class="text-end mb-3">
        <a href="@Url.Action("ExportToExcel", "DonHang", new { area = "Admin", searchTerm = ViewData["searchTerm"] })" class="btn btn-success">
            Xuất Excel
        </a>
    </div>
</div>

<div class="col-1">
    <label for="pageSize" class="form-label">Hiển thị:</label>
    <select name="pageSize" id="pageSize" class="form-select">
        @if ((int)ViewBag.PageSize == 5)
        {
            <option value="5" selected>5</option>
        }
        else
        {
            <option value="5">5</option>
        }
        @if ((int)ViewBag.PageSize == 10)
        {
            <option value="10" selected>10</option>
        }
        else
        {
            <option value="10">10</option>
        }
        @if ((int)ViewBag.PageSize == 20)
        {
            <option value="20" selected>20</option>
        }
        else
        {
            <option value="20">20</option>
        }
    </select>
</div>

<!-- Table with Orders -->
<table class="table" id="orderTable">
    <thead>
        <tr>
            <th>Mã Đơn Hàng</th>
            <th>Ngày Đặt</th>
            <th>Tổng Tiền</th>
            <th>Trạng Thái</th>
            <th>Chi Tiết</th>
            <th>Thao Tác</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            <tr>
                <td>@order.MaDonHang</td>
                <td>@order.NgayDatHang</td>
                <td>@order.TongTien.ToString("N0") VND</td>

                <td>
                    @if (order.TrangThai == 0)
                    {
                        <span class="status status-processing">Đang xử lý</span>
                    }
                    else if (order.TrangThai == 1)
                    {
                        <span class="status status-shipping">Đang giao</span>
                    }
                    else if (order.TrangThai == 2)
                    {
                        <span class="status status-delivered">Đã giao</span>
                    }
                    else if (order.TrangThai == 4)
                    {
                        <span class="status status-cancelled">Đã hủy</span>
                    }
                    else if (order.TrangThai == 5)
                    {
                        <span class="status status-refunded">Đã hoàn</span>
                    }
                    else if (order.TrangThai == 6)
                    {
                        <span class="status status-rejected">Không đồng ý hoàn</span>
                    }
                    else
                    {
                        <span class="status status-unknown">Không xác định</span>
                    }
                </td>

                <td>
                    <button class="btn btn-info btn-details" data-id="@order.MaDonHang">Chi Tiết</button>
                </td>

                <td>
                    @if (order.TrangThai == 0)
                    {
                        <form method="post" action="@Url.Action("ChangeStatus", "DonHang", new { area = "Admin" })">
                            <input type="hidden" name="maDonHang" value="@order.MaDonHang" />
                            <button type="submit" name="trangThai" value="1" class="btn btn-warning">Duyệt Vận Chuyển</button>
                        </form>
                    }
                    else if (order.TrangThai == 1)
                    {
                        <form method="post" action="@Url.Action("ChangeStatus", "DonHang", new { area = "Admin" })">
                            <input type="hidden" name="maDonHang" value="@order.MaDonHang" />
                            <button type="submit" name="trangThai" value="2" class="btn btn-success">Đã Giao</button>
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
<div class="d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = ViewBag.PageSize, trangThai = ViewBag.TrangThai }),
            new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        MaximumPageNumbersToDisplay = 5,
        LinkToPreviousPageFormat = "«",
        LinkToNextPageFormat = "»",
        LinkToFirstPageFormat = "Trang đầu",
        LinkToLastPageFormat = "Trang cuối",
        ContainerDivClasses = new[] { "pagination" },
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    })
</div>

<!-- Modal -->
<div class="modal fade" id="orderDetailModal" tabindex="-1" aria-labelledby="orderDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderDetailModalLabel">Chi Tiết Đơn Hàng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="orderDetailBody">
                <!-- Nội dung chi tiết đơn hàng sẽ được tải vào đây -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        // Handle the search button click event
        $('#searchBtn').click(function () {
            var searchTerm = $('#searchInput').val().toLowerCase(); // Get search term
            $('#orderTable tbody tr').each(function () {
                var row = $(this);
                var text = row.text().toLowerCase();
                if (text.indexOf(searchTerm) === -1) {
                    row.hide(); // Hide rows that do not match
                } else {
                    row.show(); // Show rows that match
                }
            });
        });

        // Detail modal functionality
        $(".btn-details").click(function () {
            var orderId = $(this).data("id"); // Lấy mã đơn hàng từ data-id

            $.ajax({
                url: '@Url.Action("GetOrderDetails", "DonHang", new { area = "Admin" })', // Thay đổi URL tương ứng với route của bạn
                type: 'GET',
                data: { maDonHang: orderId },
                success: function (response) {
                    $('#orderDetailBody').html(response); // Gán dữ liệu chi tiết vào modal
                    $('#orderDetailModal').modal('show'); // Hiển thị modal
                },
                error: function () {
                    alert("Có lỗi xảy ra khi tải chi tiết đơn hàng.");
                }
            });
        });
    });
    $(document).ready(function () {
        // Theo dõi sự thay đổi của dropdown "Hiển thị"
        $('#pageSize').change(function () {
            // Lấy giá trị mới của pageSize
            var pageSize = $(this).val();

            // Lấy giá trị của trang hiện tại từ URL (hoặc giá trị mặc định là 1)
            var currentPage = new URLSearchParams(window.location.search).get('page') || 1;

            // Thực hiện chuyển hướng với pageSize mới
            window.location.href = '@Url.Action("Index", "DonHang", new { area = "Admin", trangThai = ViewBag.TrangThai })' + '?page=' + currentPage + '&pageSize=' + pageSize;
        });

        // Phần tìm kiếm đơn hàng
        $('#searchBtn').click(function () {
            var searchTerm = $('#searchInput').val().toLowerCase();
            $('#orderTable tbody tr').each(function () {
                var row = $(this);
                var text = row.text().toLowerCase();
                if (text.indexOf(searchTerm) === -1) {
                    row.hide();
                } else {
                    row.show();
                }
            });
        });

        // Chi tiết đơn hàng
        $(".btn-details").click(function () {
            var orderId = $(this).data("id");
            $.ajax({
                url: '@Url.Action("GetOrderDetails", "DonHang", new { area = "Admin" })',
                type: 'GET',
                data: { maDonHang: orderId },
                success: function (response) {
                    $('#orderDetailBody').html(response);
                    $('#orderDetailModal').modal('show');
                },
                error: function () {
                    alert("Có lỗi xảy ra khi tải chi tiết đơn hàng.");
                }
            });
        });
    });

</script>

<style>
    /* Định dạng chung cho trạng thái */
    .status {
        padding: 5px 10px;
        border-radius: 5px;
        font-weight: bold;
        color: white;
        display: inline-block;
        text-align: center;
    }

    /* Màu sắc cho từng trạng thái */
    .status-processing {
        background-color: #FFC107; /* Màu vàng */
    }

    .status-shipping {
        background-color: #17A2B8; /* Màu xanh dương nhạt */
    }

    .status-delivered {
        background-color: #28A745; /* Màu xanh lá */
    }

    .status-cancelled {
        background-color: #DC3545; /* Màu đỏ */
    }

    .status-refunded {
        background-color: #007BFF; /* Màu xanh dương */
    }

    .status-rejected {
        background-color: #6C757D; /* Màu xám đậm */
    }

    .status-unknown {
        background-color: #6C757D; /* Màu xám nhạt */
    }

</style>
