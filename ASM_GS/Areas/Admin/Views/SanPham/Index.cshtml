@model X.PagedList.IPagedList<ASM_GS.Models.SanPham>
@using X.PagedList
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Danh sách Sản Phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    
}


<h1 class="card-header">@ViewData["Title"]</h1>


<body>
    <!-- Modal Thêm Sản Phẩm -->
    <div class="col-lg-4 col-md-6">
        <small class="text-light fw-semibold">Thêm Sản Phẩm</small>
        <div class="mt-3">
            <!-- Button to Trigger Modal -->
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalAddProduct">
                Thêm Sản Phẩm
            </button>
        </div>
    </div>

    <!-- Modal Structure -->
    <div class="modal fade" id="modalAddProduct" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <!-- Content will be loaded via AJAX -->
            </div>
        </div>
    </div>
    <!-- Modal Edit Sản Phẩm -->
    <div class="modal fade" id="editProductModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <!-- Nội dung sẽ được tải qua AJAX -->
            </div>
        </div>
    </div>

    
    <!-- Form Tìm kiếm và Lọc -->
    <form id="filterForm" class="mb-3">
        <div class="row">
            <div class="col-md-3">
                <input type="text" name="searchName" id="searchName" class="form-control" placeholder="Tìm theo tên" />
            </div>
            <!-- Combo box lọc theo danh mục -->
            <div class="col-md-2">
                <select name="categoryId" id="categoryId" class="form-control">
                    <option value="">-- Chọn danh mục --</option>
                    @foreach (var item in ViewBag.DanhMucList as SelectList)
                    {

                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <select name="status" id="status" class="form-control">
                    <option value="">-- Trạng thái --</option>
                    <option value="1">Còn Hàng</option>
                    <option value="0">Hết Hàng</option>
                </select>
            </div>
            <div class="col-md-2">
                <select name="sortOrder" id="sortOrder" class="form-control">
                    <option value="">Sắp xếp theo tên (A-Z)</option>
                    <option value="name_desc">Sắp xếp theo tên (Z-A)</option>
                    <option value="price_asc">Giá: Thấp đến Cao</option>
                    <option value="price_desc">Giá: Cao đến Thấp</option>
                </select>
            </div>
            <!-- Page Size Dropdown -->
            <div class="col-md-2">
                <select id="pageSize" name="pageSize" class="form-select d-inline-block w-auto" onchange="this.form.submit()" style="width: 45px; margin-left: 10px;">
                    @if (ViewBag.PageSize == 5)
                    {
                        <option value="5" selected>5</option>
                    }
                    else
                    {
                        <option value="5">5</option>
                    }

                    @if (ViewBag.PageSize == 10)
                    {
                        <option value="10" selected>10</option>
                    }
                    else
                    {
                        <option value="10">10</option>
                    }

                    @if (ViewBag.PageSize == 15)
                    {
                        <option value="15" selected>15</option>
                    }
                    else
                    {
                        <option value="15">15</option>
                    }

                    @if (ViewBag.PageSize == 20)
                    {
                        <option value="20" selected>20</option>
                    }
                    else
                    {
                        <option value="20">20</option>
                    }

                    @if (ViewBag.PageSize == 50)
                    {
                        <option value="50" selected>50</option>
                    }
                    else
                    {
                        <option value="50">50</option>
                    }
                </select>

            </div>

        </div>
    </form>


    <!-- Bordered Table -->
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <div id="productListContainer">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                @* <th>Mã Sản Phẩm</th> *@
                                <th>
                                    <a href="?sortOrder=@(Context.Request.Query["sortOrder"] == "name_desc" ? "" : "name_desc")">Tên Sản Phẩm</a>
                                </th>
                                <th>Ảnh Sản Phẩm</th>
                                <th>Giá</th>
                                <th>Mô Tả</th>
                                <th>Tên Danh Mục</th> 
                                <th>Số Lượng</th>
                                <th>Ngày Thêm</th>
                                <th>Đơn Vị</th>
                                <th>NSX</th>
                                <th>HSD</th>
                                <th>Trạng Thái</th>
                                <th>Hành Động</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    @* <td>@item.MaSanPham</td> *@
                                    <td>@item.TenSanPham</td>
                                    <td>
                                        @if (item.AnhSanPhams != null && item.AnhSanPhams.Any())
                                        {
                                            <div class="image-stack">
                                                @foreach (var image in item.AnhSanPhams)
                                                {
                                                    <img src="@image.UrlAnh" alt="Ảnh sản phẩm" class="stacked-image" />
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <span>Không có ảnh</span>
                                        }
                                    </td>
                                    <td>@item.Gia.ToString("N0")</td>
                                    <td>@item.MoTa</td>
                                    <td>@item.MaDanhMucNavigation?.TenDanhMuc</td> <!-- Display category name -->
                                    <td>@item.SoLuong</td>
                                    <td>@item.NgayThem?.ToString("dd-MM-yyyy")</td>
                                    <td>@item.DonVi</td>
                                    <td>@item.Nsx?.ToString("dd-MM-yyyy")</td>
                                    <td>@item.Hsd?.ToString("dd-MM-yyyy")</td>
                                    <td>
                                        @if (item.TrangThai == 1)
                                        {
                                            <span class="badge bg-success">Còn Hàng</span> <!-- In stock -->
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">Hết Hàng</span> <!-- Out of stock -->
                                        }
                                    </td>
                                    <td>
                                        <div class="dropdown">
                                            <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                                <i class="bx bx-dots-vertical-rounded"></i>
                                            </button>
                                            <div class="dropdown-menu">
                                                <a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#editProductModal" onclick="loadEditProduct('@item.MaSanPham')">
                                                    <i class="bi bi-pencil-square"></i> Sửa
                                                </a>


                                                <a href="javascript:void(0)" class="dropdown-item" onclick="confirmDelete('@item.MaSanPham')">
                                                    <i class="bx bx-trash me-1"></i> Xóa
                                                </a>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>

                    </table>
                  </div>
            </div>
        </div>
    </div>
    <!--/ Bordered Table -->
    
    <div>
        <div class="d-flex justify-content-center mt-4">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = ViewBag.PageSize, searchTerm = ViewBag.SearchTerm }),
                     new PagedListRenderOptions
            {
                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                DisplayLinkToLastPage = PagedListDisplayMode.Always,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                LinkToFirstPageFormat = "Trang đầu",
                LinkToLastPageFormat = "Trang cuối",
                LinkToPreviousPageFormat = "«",
                LinkToNextPageFormat = "»",
                MaximumPageNumbersToDisplay = 5,
                ContainerDivClasses = new[] { "pagination" },
                UlElementClasses = new[] { "pagination justify-content-center" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" }
            })
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- AJAX Script -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            $('#modalAddProduct').on('show.bs.modal', function() {
                $.ajax({
                    url: '/Admin/SanPham/CreatePartial', // URL to your action method
                    type: 'GET',
                    success: function(data) {
                        $('#modalAddProduct .modal-content').html(data); // Load content into modal
                    },
                    error: function(xhr, status, error) {
                        console.error("Error loading partial view:", error);
                    }
                });
            });
        });
        function loadEditProduct(maSanPham) {
            $.ajax({
                url: '/Admin/SanPham/EditPartial', // Đường dẫn đến action EditPartial
                type: 'GET',
                data: { maSanPham: maSanPham },
                success: function (response) {
                    // Chèn nội dung vào modal và hiển thị modal
                    $('#editProductModal .modal-content').html(response);
                    $('#editProductModal').modal('show'); // Hiển thị modal
                },
                error: function () {
                    $('#editProductModal .modal-content').html('<p class="text-danger">Không thể tải thông tin sản phẩm. Vui lòng thử lại sau.</p>');
                }
            });
        }




        $(document).ready(function() {
            // Trigger tìm kiếm mỗi khi thay đổi đầu vào hoặc sắp xếp
            $('#filterForm input, #filterForm select').on('input change', function() {
                performSearch();
            });

            // Thực hiện tìm kiếm qua AJAX
            function performSearch() {
                $.ajax({
                    url: '/Admin/SanPham/Index',
                    type: 'GET',
                    data: $('#filterForm').serialize(), // Serialize form data
                    success: function(data) {
                        var $data = $(data);
                        $('#productListContainer').html($data.find('#productListContainer').html());
                    },
                    error: function(xhr, status, error) {
                        console.error("Lỗi tìm kiếm:", error);
                    }
                });
            }
        });
    </script>
    <script>
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function confirmDelete(maSanPham) {
            Swal.fire({
                title: 'Bạn có chắc chắn?',
                text: "Sản phẩm sẽ bị xóa và không thể khôi phục!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Admin/SanPham/DeleteConfirmed',
                        type: 'POST',
                        data: {
                            id: maSanPham
                        },
                        success: function(response) {
                            Swal.fire(
                                'Đã xóa!',
                                'Sản phẩm đã được xóa thành công.',
                                'success'
                            ).then(() => {
                                location.reload(); // Reload the page to reflect changes
                            });
                        },
                        error: function() {
                            Swal.fire(
                                'Lỗi!',
                                'Không thể xóa sản phẩm. Vui lòng thử lại.',
                                'error'
                            );
                        }
                    });
                }
            });
        }
    </script>

</body>
<style>
    .image-stack {
        display: flex;
        align-items: center;
    }

    .stacked-image {
        width: 40px; /* Kích thước ảnh */
        height: 40px;
        border-radius: 50%; /* Làm ảnh tròn */
        border: 2px solid white; /* Viền trắng để tách biệt các ảnh */
        margin-left: -10px; /* Độ trùng lặp của ảnh */
        object-fit: cover; /* Đảm bảo ảnh che phủ toàn bộ vùng tròn */
    }

    .image-stack .stacked-image:first-child {
        margin-left: 0; /* Không áp dụng trùng lặp cho ảnh đầu tiên */
    }
</style>




