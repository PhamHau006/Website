@model ASM_GS.ViewModels.DonHang_LSViewModel
@{
    Layout = "~/Views/Shared/_LayoutPhu.cshtml";
}
<br />
<h1 style="margin-left: 50px">Chi tiết đơn hàng</h1>
<div style="margin-top: 50px; margin-left: 50px; margin-right:50px">

    <table class="table table-bordered">
    <thead>
        <tr>
            <th>Tên sản phẩm/Combo</th>
            <th>Hình ảnh</th>
            <th>Số lượng</th>
            <th>Giá</th>
            <th>Tổng tiền</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ChiTietHoaDons)
        {
            <tr>
           
                <!-- Hiển thị tên sản phẩm hoặc tên combo -->
                <td>
                    @if (!string.IsNullOrEmpty(item.ComboName))
                    {
                        @item.ComboName
                    }
                    else
                    {
                        @item.SanPhamName
                    }
                </td>

                <!-- Hiển thị hình ảnh sản phẩm hoặc combo -->
                <td>
                    @if (!string.IsNullOrEmpty(item.HinhAnhCombo))
                    {
                        <img src="@item.HinhAnhCombo" alt="@item.ComboName" style="width: 100px; height: auto;" />
                    }
                    else if (!string.IsNullOrEmpty(item.HinhAnhSanPham))
                    {
                        <img src="@item.HinhAnhSanPham" alt="@item.SanPhamName" style="width: 100px; height: auto;" />
                    }
                    else
                    {
                        <span>Chưa có hình ảnh</span>
                    }
                </td>

                <!-- Hiển thị số lượng -->
                <td>@item.SoLuong</td>

                <!-- Hiển thị giá -->
                <td>@item.Gia.ToString("N0") VNĐ</td>
                <!-- Hiển thị tổng tiền -->
                <td>
                    @string.Format("{0:N0} VNĐ", item.SoLuong * item.Gia)
                </td>
            </tr>
        }
    </tbody>
</table>
</div>
@* <a href="@Url.Action("Index", "DonHangLS")" style="margin-left: 50px">Quay lại danh sách đơn hàng</a>
 *@
@if ((DateTime.Now - Model.NgayXuatHoaDon.ToDateTime(new TimeOnly(0, 0))).TotalDays <= 3)
{
    @if (Model.IsRefunded)
    {
        <p class="text-success">Đã gửi yêu cầu hoàn trả trước đó.</p>

        <h5>Ảnh đính kèm:</h5>
        <div class="row">
            @foreach (var image in Model.RefundRequestImages)
            {
                <div class="col-md-3">
                    <img src="@image.ImageUrl" class="img-thumbnail" alt="Ảnh hoàn trả" />
                </div>
            }
        </div>
    }
    else
    {
        <div id="refundSection" style="margin-top: 50px; margin-left: 50px; margin-right:50px">
            <h4>Hoàn trả hóa đơn</h4>
            <form id="refundForm" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                <input type="hidden" name="MaDonHang" value="@Model.MaHoaDon" />
                <div class="form-group">
                    <label for="LyDo">Lý do hoàn trả:</label>
                    <textarea id="LyDo" name="LyDo" class="form-control" required></textarea>
                </div>
                <div class="form-group">
                    <label for="Images">Tải lên ảnh:</label>
                    <input type="file" id="Images" name="Images" class="form-control" multiple accept="image/*" />
                </div>
                <div id="imagePreview" class="row mt-3"></div>
                <button type="button" class="btn btn-danger mt-3" id="submitRefund">Yêu cầu hoàn trả</button>
            </form>
        </div>
    }
}
else
{
    <p class="text-muted">Thời hạn yêu cầu hoàn trả đã hết.</p>
}
<br />
<a href="@Url.Action("Index", "DonHangLS")" style="margin-top: 50px; margin-left: 50px; margin-right:50px">Quay lại danh sách đơn hàng</a>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.getElementById('Images').addEventListener('change', function (event) {
        const files = event.target.files;
        const previewContainer = document.getElementById('imagePreview');
        previewContainer.innerHTML = '';

        Array.from(files).forEach(file => {
            if (file.type.startsWith('image/')) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.className = 'img-thumbnail col-md-3 m-2';
                    img.style.maxWidth = '150px';
                    previewContainer.appendChild(img);
                };
                reader.readAsDataURL(file);
            }
        });
    });

    document.getElementById('submitRefund').addEventListener('click', function () {
        const form = document.getElementById('refundForm');
        const formData = new FormData(form);
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        fetch('@Url.Action("CreateRefundRequest", "RefundRequest", new { area = "Admin" })', {
            method: 'POST',
            headers: {
                'RequestVerificationToken': token
            },
            body: formData,
        })
            .then(response => {
                if (!response.ok) {
                    return response.text().then(errorMessage => {
                        throw new Error(errorMessage || 'Đã xảy ra lỗi không xác định.');
                    });
                }
                return response.text();
            })
            .then(result => {
                Swal.fire({
                    icon: 'success',
                    title: 'Thành công!',
                    text: result,
                    confirmButtonText: 'OK'
                }).then(() => {
                    document.getElementById('refundSection').style.display = 'none';
                });
            })
            .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Thất bại!',
                    text: error.message,
                    confirmButtonText: 'OK'
                });
            });
    });
</script>
<style>
    /* Làm đẹp bảng mà không ảnh hưởng đến layout */
    .table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
        font-size: 16px;
        color: #333;
        border: 1px solid #ddd; /* Thêm viền cho bảng */
    }
        /* Định dạng tiêu đề cột */
        .table th {
            background-color: #f8f8f8; /* Màu nền sáng cho tiêu đề */
            color: #333; /* Màu chữ đen */
            text-align: center;
            padding: 12px;
        }

        /* Định dạng các dòng dữ liệu */
        .table td {
            text-align: center; /* Căn giữa nội dung */
            padding: 10px;
            border: 1px solid #ddd;
        }

        /* Định dạng hàng chẵn */
        .table tr:nth-child(even) {
            background-color: #fafafa; /* Màu nền sáng cho hàng chẵn */
        }

        /* Định dạng hàng lẻ */
        .table tr:nth-child(odd) {
            background-color: #ffffff; /* Màu nền trắng cho hàng lẻ */
        }

        /* Hiệu ứng hover cho các hàng khi di chuột */
        .table tr:hover {
            background-color: #f0f0f0; /* Màu nền khi hover */
        }

        /* Định dạng hình ảnh trong bảng */
        .table td img {
            width: 100px;
            height: auto;
            border-radius: 8px; /* Bo góc ảnh */
        }
</style>
<style>
    #refundSection {
        margin-top: 50px;
        padding: 20px;
        background-color: #f9f9f9; /* Tông màu nhẹ nhàng */
        border: 1px solid #ddd; /* Đường viền nhẹ */
        border-radius: 10px; /* Bo góc */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Hiệu ứng đổ bóng */
        max-width: 600px;
    }

        #refundSection h4 {
            color: #333;
            font-weight: bold;
            margin-bottom: 20px;
            text-align: center;
        }

        #refundSection .form-group {
            margin-bottom: 20px;
        }

        #refundSection label {
            font-weight: bold;
            color: #555;
        }

        #refundSection textarea,
        #refundSection input[type="file"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            transition: border-color 0.3s;
        }

            #refundSection textarea:focus,
            #refundSection input[type="file"]:focus {
                border-color: #007bff;
                outline: none;
            }

        #refundSection #imagePreview {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: center;
        }

            #refundSection #imagePreview img {
                width: 120px;
                height: auto;
                border: 1px solid #ddd;
                border-radius: 8px;
                box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
            }

        #refundSection button {
            display: block;
            width: 100%;
            padding: 12px;
            font-size: 16px;
            background-color: #dc3545; /* Màu đỏ nút */
            color: #fff;
            border: none;
            border-radius: 5px;
            transition: background-color 0.3s;
            cursor: pointer;
        }

            #refundSection button:hover {
                background-color: #c82333; /* Màu đậm hơn khi hover */
            }

    /* Chỉnh padding và margin tổng thể */
  
    .text-muted {
        font-style: italic;
        color: #999;
    }
</style>
