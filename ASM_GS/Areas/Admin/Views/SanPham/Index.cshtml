@model X.PagedList.IPagedList<ASM_GS.Models.SanPham>
@using X.PagedList
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Danh sách Sản Phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var Direct = ViewData["RedirectUrl"] as string;
    
}
<style>
    .custom-alert {
        background-color: #28a745; /* Màu nền xanh đậm hơn */
        color: #fff; /* Màu chữ trắng nổi bật */
        font-weight: bold; /* Chữ đậm hơn */
        border: 1px solid #1e7e34; /* Viền màu xanh đậm */
        padding: 10px 15px; /* Thêm khoảng cách bên trong */
        border-radius: 5px; /* Bo góc */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Đổ bóng nhẹ để nổi bật */
        white-space: nowrap;
    }

        .custom-alert button.btn-close {
            filter: brightness(0) invert(1); /* Chỉnh nút đóng thành màu trắng */
        }

    .btn-success {
        background-color: #0e92eb;
        border-color: #0e92eb;
        box-shadow: 0 0.125rem 0.25rem 0 rgba(14, 146, 235, 0.4);
    }

        .btn-success:hover,
        .btn-success:active,
        .btn-success:focus {
            background-color: #0e92eb;
            border-color: #0e92eb;
            box-shadow: 0 0.125rem 0.25rem 0 rgba(14, 146, 235, 0.4);
        }

</style>

<body>

    <!-- Modal Structure -->
    <div class="modal fade" id="modalAddProduct" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <!-- Content will be loaded via AJAX -->
            </div>
        </div>
    </div>
    <!-- Modal Edit Sản Phẩm -->
    <div class="modal fade" id="editProductModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <!-- Nội dung sẽ được tải qua AJAX -->
            </div>
        </div>
    </div>
    <div class="modal fade" id="detailsProductModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <!-- Nội dung chi tiết sản phẩm sẽ được tải động -->
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-between align-items-center mb-3" style="gap: 10px; padding: 10px;">
        <!-- Page Size Dropdown -->
        <form id="filterForm" class="form-inline d-flex align-items-center" style="margin-left: 5px;">
            <label for="pageSize" class="mr-2 mb-0" style="margin-left: 10px;">Hiển thị:</label>

            <select id="pageSize" name="pageSize" class="form-select d-inline-block w-auto" onchange="this.form.submit()" style="width: 45px; margin-left: 10px;">
                @if (ViewBag.PageSize == 5)
                {
                    <option value="5" selected>5</option>
                }
                else
                {
                    <option value="5">5</option>
                }

                @if (ViewBag.PageSize == 10)
                {
                    <option value="10" selected>10</option>
                }
                else
                {
                    <option value="10">10</option>
                }

                @if (ViewBag.PageSize == 15)
                {
                    <option value="15" selected>15</option>
                }
                else
                {
                    <option value="15">15</option>
                }

                @if (ViewBag.PageSize == 20)
                {
                    <option value="20" selected>20</option>
                }
                else
                {
                    <option value="20">20</option>
                }

                @if (ViewBag.PageSize == 50)
                {
                    <option value="50" selected>50</option>
                }
                else
                {
                    <option value="50">50</option>
                }
            </select>
        </form>
        <!-- Button to Trigger Modal for Add Product -->
        <a href="#" class="btn btn-primary" style="padding: 10px 20px; font-size: 14px; margin-right: 200px;" data-bs-toggle="modal" onclick="loadAddProductModal()">
            <i class="bi bi-plus" style="margin-right: 5px;"></i> Thêm Sản Phẩm
        </a>

        <!-- Filter Form -->
        <form id="filterForm" class="form-inline d-flex align-items-center" style="gap:5px; margin-right:5px">
            <!-- Input tìm kiếm -->
            <input type="text" name="searchName" id="searchName" class="form-control" placeholder="Tìm theo tên"
                   value="@ViewBag.SearchName" style="font-size: 12px;" />

            <select name="categoryId" id="categoryId" class="form-control" onchange="this.form.submit();" style="margin-right: 10px;">
                <option value="">-- Chọn danh mục --</option>
                @foreach (var item in (List<ASM_GS.Models.DanhMuc>)ViewBag.DanhMucList)
                {
                    @if (item.MaDanhMuc == (ViewBag.CategoryId?.ToString() ?? ""))
                    {
                        <option value="@item.MaDanhMuc" selected="selected">@item.TenDanhMuc</option>
                    }
                    else
                    {
                        <option value="@item.MaDanhMuc">@item.TenDanhMuc</option>
                    }
                }
            </select>

    <!-- Dropdown lọc theo trạng thái -->
            <select name="status" id="status" class="form-control" style="font-size: 12px;" onchange="this.form.submit();">
                <option value="">-- Trạng thái --</option>
                @if (ViewBag.Status?.ToString() == "1")
                {
                    <option value="1" selected>Còn Hàng</option>
                    <option value="0">Hết Hàng</option>
                }
                else if (ViewBag.Status?.ToString() == "0")
                {
                    <option value="1">Còn Hàng</option>
                    <option value="0" selected>Hết Hàng</option>
                }
                else
                {
                    <option value="1">Còn Hàng</option>
                    <option value="0">Hết Hàng</option>
                }
            </select>


    <!-- Dropdown sắp xếp -->
            <select name="sortOrder" id="sortOrder" class="form-control" style="font-size: 12px; width: 200px;" onchange="this.form.submit();">
                @if (string.IsNullOrEmpty(ViewBag.SortOrder))
                {
                    <option value="" selected>Sắp xếp theo tên (A-Z)</option>
                    <option value="name_desc">Sắp xếp theo tên (Z-A)</option>
                    <option value="price_asc">Giá: Thấp đến Cao</option>
                    <option value="price_desc">Giá: Cao đến Thấp</option>
                }
                else if (ViewBag.SortOrder == "name_desc")
                {
                    <option value="">Sắp xếp theo tên (A-Z)</option>
                    <option value="name_desc" selected>Sắp xếp theo tên (Z-A)</option>
                    <option value="price_asc">Giá: Thấp đến Cao</option>
                    <option value="price_desc">Giá: Cao đến Thấp</option>
                }
                else if (ViewBag.SortOrder == "price_asc")
                {
                    <option value="">Sắp xếp theo tên (A-Z)</option>
                    <option value="name_desc">Sắp xếp theo tên (Z-A)</option>
                    <option value="price_asc" selected>Giá: Thấp đến Cao</option>
                    <option value="price_desc">Giá: Cao đến Thấp</option>
                }
                else if (ViewBag.SortOrder == "price_desc")
                {
                    <option value="">Sắp xếp theo tên (A-Z)</option>
                    <option value="name_desc">Sắp xếp theo tên (Z-A)</option>
                    <option value="price_asc">Giá: Thấp đến Cao</option>
                    <option value="price_desc" selected>Giá: Cao đến Thấp</option>
                }
            </select>

</form>

    </div>


    <!-- Bordered Table -->
    <div class="card">
        <h5 class="card-header">@ViewData["Title"]</h5>
        <div class="card-body">
            <div class="table-responsive">
                <div id="productListContainer">
                    @if (Model == null || !Model.Any())
                    {
                        <p class="text-danger">Không tìm thấy sản phẩm nào.</p>
                    }
                    else
                    {
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>
                                        <a href="?sortOrder=@(Context.Request.Query["sortOrder"] == "name_desc" ? "" : "name_desc")">Tên Sản Phẩm</a>
                                    </th>
                                    <th>Ảnh Sản Phẩm</th>
                                    <th>Giá</th>
                                    <th>Tên Danh Mục</th>
                                    <th>Số Lượng</th>
                                    <th>Trạng Thái</th>
                                    <th>Hành Động</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@item.TenSanPham</td>
                                        <td>
                                            @if (item.AnhSanPhams != null && item.AnhSanPhams.Any())
                                            {
                                                <img src="@item.AnhSanPhams.First().UrlAnh" alt="Ảnh sản phẩm" class="product-image" />
                                            }
                                            else
                                            {
                                                <span>Không có ảnh</span>
                                            }
                                        </td>
                                        <td>@item.Gia.ToString("N0")</td>
                                        <td>@item.MaDanhMucNavigation?.TenDanhMuc</td>
                                        <td>@item.SoLuong</td>
                                        <td>
                                            @if (item.TrangThai == 1)
                                            {
                                                <span class="badge bg-success">Còn Hàng</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Hết Hàng</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="dropdown">
                                                <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                                    <i class="bx bx-dots-vertical-rounded"></i>
                                                </button>
                                                <div class="dropdown-menu">
                                                    <a href="javascript:void(0)" class="dropdown-item" onclick="loadProductDetails('@item.MaSanPham')">
                                                        <i class="bi bi-eye"></i> Xem Chi Tiết
                                                    </a>
                                                    <a class="dropdown-item" href="#" data-bs-toggle="modal" onclick="loadEditProduct('@item.MaSanPham')">
                                                        <i class="bi bi-pencil-square"></i> Sửa
                                                    </a>
                                                    <a href="javascript:void(0)" class="dropdown-item text-danger" onclick="confirmDelete('@item.MaSanPham')">
                                                        <i class="bi bi-trash"></i> Xóa
                                                    </a>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                </div>
            </div>
        </div>
    </div>
    <!--/ Bordered Table -->


    <div>
        <div class="d-flex justify-content-center mt-4">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = ViewBag.PageSize, searchTerm = ViewBag.SearchTerm }),
                     new PagedListRenderOptions
            {
                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                DisplayLinkToLastPage = PagedListDisplayMode.Always,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                LinkToFirstPageFormat = "Trang đầu",
                LinkToLastPageFormat = "Trang cuối",
                LinkToPreviousPageFormat = "«",
                LinkToNextPageFormat = "»",
                MaximumPageNumbersToDisplay = 5,
                ContainerDivClasses = new[] { "pagination" },
                UlElementClasses = new[] { "pagination justify-content-center" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" }
            })
        </div>
    </div>
      <!-- Thông báo Chưa Login -->
      <div id="loginMessage" style="display:none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background: #fff; padding: 20px; border-radius: 8px; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);width: 500px; height:300px; text-align:center; align-items: center">
          <p style="color: red; font-size: 2rem">Vui lòng đăng nhập</p>
      </div>


    <!-- AJAX Script -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
      <script>
        $(document).ready(function () {
            var directUrl = '@Direct';

            if (directUrl) {
                Swal.fire({
                    icon: 'info',
                    title: 'Thông báo',
                    text: 'Bạn sẽ được chuyển đến trang đăng nhập.',
                    showConfirmButton: false,
                    timer: 3000
                }).then(() => {
                    window.location.href = '/LoginAdmin';
                });
            }
        });
      </script>
    <!-- AJAX Script -->

    <script>
        $(document).ready(function() {
            function initializeCreateFormAjax() {
                // Attach submit handler to the form
                $("#createForm").on("submit", function(e) {
                    e.preventDefault(); // Prevent default form submission

                    // Collect form data
                    let formData = new FormData(this);

                    $.ajax({
                        url: "/Admin/SanPham/Create", // URL to handle form submission
                        type: "POST",
                        data: formData,
                        processData: false, // Required for FormData
                        contentType: false, // Required for FormData
                        beforeSend: function() {
                            // Disable the submit button to prevent multiple submissions
                            $("#createForm button[type='submit']").prop("disabled", true).text("Đang xử lý...");
                        },
                        success: function(response) {
                            // Clear existing error messages
                            $(".text-danger").text("");

                            if (response.success) {
                                // Success handling
                                Swal.fire({
                                    icon: "success",
                                    title: "Thành công!",
                                    text: response.message || "Sản phẩm đã được thêm thành công.",
                                }).then(() => {
                                    // Reload the product list
                                    location.reload();
                                });

                                // Reset the form
                                $("#createForm")[0].reset();
                                // Close the modal
                                $("#modalAddProduct").modal("hide");
                            } else if (response.errors) {
                                // Display validation errors below each field
                                for (let key in response.errors) {
                                    $(`#error${key}`).text(response.errors[key].join(", "));
                                }
                            } else {
                                Swal.fire({
                                    icon: "error",
                                    title: "Lỗi!",
                                    text: response.message || "Đã xảy ra lỗi. Vui lòng thử lại.",
                                });
                            }
                        },
                        error: function() {
                            // Handle server errors
                            Swal.fire({
                                icon: "error",
                                title: "Lỗi!",
                                text: "Không thể gửi dữ liệu. Vui lòng thử lại.",
                            });
                        },
                        complete: function() {
                            // Re-enable the submit button
                            $("#createForm button[type='submit']").prop("disabled", false).text("Thêm Sản Phẩm");
                        },
                    });
                });
            }

            // Initialize the form inside the modal when loaded
            function loadAddProductModal() {
                $.ajax({
                    url: "/Admin/SanPham/CreatePartial", // URL to the CreatePartial view
                    type: "GET",
                    success: function(data) {
                        // Load the modal content
                        $("#modalAddProduct .modal-content").html(data);
                        $("#modalAddProduct").modal("show"); // Show the modal
                        initializeCreateFormAjax(); // Reinitialize form submission for the loaded form
                    },
                    error: function() {
                        Swal.fire({
                            icon: "error",
                            title: "Lỗi!",
                            text: "Không thể tải nội dung. Vui lòng thử lại!",
                        });
                    },
                });
            }

            // Attach the click event to trigger the modal
            $(".btn-primary[data-bs-toggle='modal']").on("click", function(e) {
                e.preventDefault();
                loadAddProductModal();
            });
        });


        function loadEditProduct(maSanPham) {
            $.ajax({
                url: '/Admin/SanPham/EditPartial',
                type: 'GET',
                data: { maSanPham: maSanPham },
                success: function(response) {
                    $('#editProductModal .modal-content').html(response); // Insert response content
                    $('#editProductModal').modal('show'); // Show modal

                    // Handle form submission for updating product
                    $('#editProductModal form').on('submit', function(event) {
                        event.preventDefault(); // Prevent default form submission

                        $.ajax({
                            url: '/Admin/SanPham/Edit',
                            type: 'POST',
                            data: new FormData(this),
                            processData: false,
                            contentType: false,
                            beforeSend: function() {
                                // Disable the submit button to prevent multiple submissions
                                $("#editProductModal button[type='submit']").prop("disabled", true).text("Đang xử lý...");
                            },
                            success: function(response) {
                                // Clear existing error messages
                                $(".text-danger").text("");

                                if (response.success) {
                                    $('#editProductModal').modal('hide'); // Close the modal
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Cập nhật thành công!',
                                        text: response.message || 'Sản phẩm đã được cập nhật.',
                                    }).then(() => {
                                        location.reload(); // Reload page on successful update
                                    });
                                } else if (response.errors) {
                                    // Display validation errors below each field
                                    for (let key in response.errors) {
                                        $(`#error${key}`).text(response.errors[key].join(", "));
                                    }
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Lỗi cập nhật!',
                                        text: response.message || 'Đã xảy ra lỗi.',
                                    });
                                }
                            },
                            error: function() {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Lỗi!',
                                    text: 'Không thể cập nhật sản phẩm. Vui lòng thử lại!',
                                    confirmButtonText: 'OK'
                                });
                            },
                            complete: function() {
                                // Re-enable the submit button after AJAX completes
                                $("#editProductModal button[type='submit']").prop("disabled", false).text("Cập nhật sản phẩm");
                            }
                        });
                    });
                },
                error: function() {
                    $('#editProductModal .modal-content').html('<p class="text-danger">Không thể tải thông tin sản phẩm. Vui lòng thử lại sau.</p>');
                }
            });
        }


        $(document).ready(function() {
            // Bắt sự kiện input và thay đổi dropdown
            $('#filterForm input, #filterForm select').on('input change', function() {
                performSearch();
            });

            // Thực hiện tìm kiếm qua AJAX
            function performSearch() {
                const serializedData = $('#filterForm').serialize();
                console.log("Serialized Data: ", serializedData);

                $.ajax({
                    url: '/Admin/SanPham/Index', // URL của action Index
                    type: 'GET',
                    data: serializedData, // Serialize toàn bộ dữ liệu của form
                    success: function(data) {
                        var $data = $(data);

                        // Kiểm tra nếu không có sản phẩm nào
                        if ($data.find('#productListContainer').html().trim() === "") {
                            // Hiển thị thông báo không tìm thấy sản phẩm
                            $('#productListContainer').html('<p class="text-danger">Không tìm thấy sản phẩm nào.</p>');
                        } else {
                            // Cập nhật danh sách sản phẩm
                            $('#productListContainer').html($data.find('#productListContainer').html());
                        }

                        // Cập nhật giá trị trong các trường lọc
                        $('#categoryId').val($data.find('#categoryId').val());
                        $('#status').val($data.find('#status').val());
                        $('#sortOrder').val($data.find('#sortOrder').val());
                    },
                    error: function(xhr, status, error) {
                        console.error("Lỗi tìm kiếm:", error);
                    }
                });
            }
        });
    </script>
    <script>
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function confirmDelete(maSanPham) {
            Swal.fire({
                title: 'Bạn có chắc chắn?',
                text: "Sản phẩm sẽ bị xóa và không thể khôi phục!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Admin/SanPham/DeleteConfirmed',
                        type: 'POST',
                        data: {
                            id: maSanPham
                        },
                        success: function (response) {
                            Swal.fire(
                                'Đã xóa!',
                                'Sản phẩm đã được xóa thành công.',
                                'success'
                            ).then(() => {
                                location.reload(); // Reload the page to reflect changes
                            });
                        },
                        error: function () {
                            Swal.fire(
                                'Lỗi!',
                                'Không thể xóa sản phẩm. Vui lòng thử lại.',
                                'error'
                            );
                        }
                    });
                }
            });
        }
    </script>
    <script>
        function loadProductDetails(maSanPham) {
            $.ajax({
                url: '/Admin/SanPham/DetailsPartial',
                type: 'GET',
                data: { maSanPham: maSanPham },
                success: function (response) {
                    $('#detailsProductModal .modal-content').html(response); // Insert response content
                    $('#detailsProductModal').modal('show'); // Show modal
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: 'Không thể tải chi tiết sản phẩm. Vui lòng thử lại!',
                        confirmButtonText: 'OK'
                    });
                }
            });
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
<style>
    .image-stack {
        display: flex;
        align-items: center;
    }

    .stacked-image {
        width: 40px; /* Kích thước ảnh */
        height: 40px;
        border-radius: 50%; /* Làm ảnh tròn */
        border: 2px solid white; /* Viền trắng để tách biệt các ảnh */
        margin-left: -10px; /* Độ trùng lặp của ảnh */
        object-fit: cover; /* Đảm bảo ảnh che phủ toàn bộ vùng tròn */
    }

    .image-stack .stacked-image:first-child {
        margin-left: 0; /* Không áp dụng trùng lặp cho ảnh đầu tiên */
    }

    .product-image {
        width: 60px; /* Đặt kích thước chiều rộng */
        height: 60px; /* Đặt kích thước chiều cao */
        object-fit: cover; /* Đảm bảo ảnh không bị méo */
        border: 1px solid #ddd; /* Thêm viền xám nhạt */
        border-radius: 5px; /* Bo góc ảnh */
        padding: 2px; /* Khoảng cách nhỏ giữa viền và ảnh */
    }
</style>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>